{
  "Accordion": {
    "prefix": "ch-accordionTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { ReactNode, useState } from \"react\";",
      "",
      "/**",
      " * Example Data:",
      " * const ITEMS = [",
      "    {",
      "      title: \"Title 1\",",
      "      content:",
      "        \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate\",",
      "    },",
      "    { title: \"Title 2\", content: <div>Title2 Content</div> },",
      "    { title: \"Title 3\", content: <a>Title3 Content</a> },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example usage:",
      " * <AccordionTS",
      "        data={[",
      "          {",
      "            title: \"Title 1\",",
      "            content:",
      "              \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate\",",
      "          },",
      "          { title: \"Title 2\", content: <div>Title2 Content</div> },",
      "          { title: \"Title 3\", content: <a>Title3 Content</a> },",
      "        ]}",
      "      />",
      "  */",
      "",
      "export type AccordionData = {",
      "  title: string;",
      "  content: ReactNode;",
      "};",
      "",
      "export default function AccordionTS({ data }: { data: AccordionData[] }) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-lg\",",
      "      shape: \"\",",
      "      border: \"\",",
      "      color: \"\", // Will affect content background",
      "      text: \"\", // Will affect content text",
      "    },",
      "    title: {",
      "      color: \"bg-gray-100\",",
      "      text: \"text-bold text-lg text-black\",",
      "    },",
      "  };",
      "",
      "  return (",
      "    <div",
      "      className={`w-full ${STYLES.main.maxWidth} ${STYLES.main.shape} ${STYLES.main.border} ${STYLES.main.color} ${STYLES.main.text}`}",
      "    >",
      "      {data.map((item) => {",
      "        const [open, setOpen] = useState(false);",
      "        return (",
      "          <React.Fragment key={item.title}>",
      "            <a",
      "              onClick={() => setOpen(!open)}",
      "              className={`flex w-full cursor-pointer flex-row justify-between py-2 px-4 ${STYLES.title.color} ${STYLES.title.text}`}",
      "            >",
      "              <span>{item.title}</span>",
      "              <svg",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "                className={`h-5 w-5 transition-all duration-300 ${",
      "                  open ? \"rotate-180\" : \"\"",
      "                }`}",
      "                viewBox=\"0 0 20 20\"",
      "                fill=\"currentColor\"",
      "              >",
      "                <path",
      "                  fillRule=\"evenodd\"",
      "                  d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                  clipRule=\"evenodd\"",
      "                />",
      "              </svg>",
      "            </a>",
      "            <div",
      "              className={`${",
      "                open ? \"h-fit py-2\" : \"h-0 -translate-y-2 scale-y-0 opacity-0\"",
      "              } origin-top px-4 transition duration-300 ease-out`}",
      "            >",
      "              {item.content}",
      "            </div>",
      "          </React.Fragment>",
      "        );",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Alert": {
    "prefix": "ch-alert",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Alert",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function Alert({ title, details, timestamp, actions }) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-white-300/25 border-gray-700 dark:border-gray-300 dark:bg-gray-700/25\",",
      "      text: \"text-gray-700 dark:text-gray-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`overflow-auto w-fit border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <div>",
      "            <div className=\"font-bold capitalize text-lg\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"flex flex-row justify-end my-auto\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Alert TS": {
    "prefix": "ch-alertTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { ReactNode } from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <AlertTS",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function AlertTS({",
      "  title,",
      "  details,",
      "  timestamp,",
      "  actions,",
      "}: {",
      "  title: string;",
      "  details?: string;",
      "  timestamp?: string;",
      "  actions?: ReactNode;",
      "}) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-white-300/25 border-gray-700 dark:border-gray-300 dark:bg-gray-700/25\",",
      "      text: \"text-gray-700 dark:text-gray-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`w-fit overflow-auto border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <div>",
      "            <div className=\"text-lg font-bold capitalize\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"my-auto flex flex-row justify-end\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Error Alert": {
    "prefix": "ch-errorAlert",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <ErrorAlert",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function ErrorAlert({ title, details, timestamp, actions }) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-red-300/25 dark:bg-red-700/25 border-red-700 dark:border-red-300\",",
      "      text: \"text-red-700 dark:text-red-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`overflow-auto w-fit border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"font-bold capitalize text-lg\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Error Alert TS": {
    "prefix": "ch-errorAlertTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <ErrorAlertTS",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function ErrorAlertTS({",
      "  title,",
      "  details,",
      "  timestamp,",
      "  actions,",
      "}: {",
      "  title: string;",
      "  details?: string;",
      "  timestamp?: string;",
      "  actions?: JSX.Element;",
      "}) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-red-300/25 dark:bg-red-700/25 border-red-700 dark:border-red-300\",",
      "      text: \"text-red-700 dark:text-red-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`w-fit overflow-auto border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"text-lg font-bold capitalize\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Info Alert": {
    "prefix": "ch-infoAlert",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <InfoAlert",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function InfoAlert({ title, details, timestamp, actions }) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-sky-300/25 dark:bg-sky-700/25 border-sky-700 dark:border-sky-300\",",
      "      text: \"text-sky-700 dark:text-sky-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`overflow-auto w-fit border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"font-bold capitalize text-lg\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Info Alert TS": {
    "prefix": "ch-infoAlertTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <InfoAlertTS",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function InfoAlertTS({",
      "  title,",
      "  details,",
      "  timestamp,",
      "  actions,",
      "}: {",
      "  title: string;",
      "  details?: string;",
      "  timestamp?: string;",
      "  actions?: JSX.Element;",
      "}) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-sky-300/25 dark:bg-sky-700/25 border-sky-700 dark:border-sky-300\",",
      "      text: \"text-sky-700 dark:text-sky-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`w-fit overflow-auto border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"text-lg font-bold capitalize\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Success Alert": {
    "prefix": "ch-successAlert",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <SuccessAlert",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function SuccessAlert({ title, details, timestamp, actions }) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-green-300/25 border-green-700 dark:bg-green-700/25 dark:border-green-300\",",
      "      text: \"text-green-700 dark:text-green-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`overflow-auto w-fit border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"font-bold capitalize text-lg\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Success Alert TS": {
    "prefix": "ch-successAlertTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <SuccessAlertTS",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function SuccessAlertTS({",
      "  title,",
      "  details,",
      "  timestamp,",
      "  actions,",
      "}: {",
      "  title: string;",
      "  details?: string;",
      "  timestamp?: string;",
      "  actions?: JSX.Element;",
      "}) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-green-300/25 border-green-700 dark:bg-green-700/25 dark:border-green-300\",",
      "      text: \"text-green-700 dark:text-green-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`w-fit overflow-auto border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"text-lg font-bold capitalize\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Warning Alert": {
    "prefix": "ch-warningAlert",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <WarningAlert",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function WarningAlert({ title, details, timestamp, actions }) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-yellow-300/25 dark:bg-yellow-700/25 border-yellow-700 dark:border-yellow-300\",",
      "      text: \"text-yellow-700 dark:text-yellow-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`overflow-auto w-fit border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"font-bold capitalize text-lg\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "WarningAlert TS": {
    "prefix": "ch-warningAlertTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <WarningAlertTS",
      "    title=\"Alert\"",
      "    details=\"I am an Alert.\"",
      "    timestamp=\"Tue, 06 Sep 2022 22:57:04 GMT\"",
      "    actions={",
      "      <div className=\"w-fit\">",
      "        <button className=\"bg-red-500 text-white rounded hover:bg-red-400 active:scale-90 transition-all p-1\">",
      "          Close",
      "        </button>",
      "      </div>",
      "    }",
      "  />",
      " */",
      "",
      "export default function WarningAlertTS({",
      "  title,",
      "  details,",
      "  timestamp,",
      "  actions,",
      "}: {",
      "  title: string;",
      "  details?: string;",
      "  timestamp?: string;",
      "  actions?: JSX.Element;",
      "}) {",
      "  const STYLES = {",
      "    main: {",
      "      maxWidth: \"max-w-sm\",",
      "      maxHeight: \"max-h-32\",",
      "      height: \"h-16\",",
      "      color:",
      "        \"bg-yellow-300/25 dark:bg-yellow-700/25 border-yellow-700 dark:border-yellow-300\",",
      "      text: \"text-yellow-700 dark:text-yellow-300\",",
      "      shadow: \"shadow-lg\",",
      "      shape: \"rounded-md\",",
      "    },",
      "  };",
      "  return (",
      "    <div",
      "      className={`w-fit overflow-auto border-l-4 ${STYLES.main.maxHeight} ${STYLES.main.maxWidth} ${STYLES.main.height} ${STYLES.main.color} ${STYLES.main.text} ${STYLES.main.shape} ${STYLES.main.shadow}`}",
      "    >",
      "      <div className=\"mx-2 flex h-full justify-between gap-4 text-sm\">",
      "        <div className=\"flex h-full items-center gap-2\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-6 w-6\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            stroke=\"currentColor\"",
      "            strokeWidth=\"2\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\"",
      "            ></path>",
      "          </svg>",
      "          <div>",
      "            <div className=\"text-lg font-bold capitalize\">{title}</div>",
      "            <div>{details}</div>",
      "          </div>",
      "        </div>",
      "        <div className=\"flex-col justify-between\">",
      "          <div className=\"pt-1 text-xs\">{timestamp}</div>",
      "          <div className=\"float-right flex-row justify-between\">{actions}</div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Avatar": {
    "prefix": "ch-avatar",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Avatar image=\"https://api.lorem.space/image/face?w=150&h=150\" title=\"Avatar\" link=\"#\"/>",
      " */",
      "",
      "export default function Avatar({ link, image, title }) {",
      "  const STYLES = {",
      "    height: \"h-16\",",
      "    width: \"w-16\",",
      "    shape: \"rounded-md\",",
      "  };",
      "",
      "  return (",
      "    <a href={link} title={title ?? \"Avatar\"} className=\"block relative\">",
      "      <img",
      "        alt=\"profile\"",
      "        src={image || \"https://api.lorem.space/image/face?w=150&h=150\"}",
      "        className={`object-cover ${STYLES.height} ${STYLES.width} ${STYLES.shape}`}",
      "      />",
      "    </a>",
      "  );",
      "}",
      ""
    ]
  },
  "Avatar TS": {
    "prefix": "ch-avatarTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <AvatarTS image=\"https://api.lorem.space/image/face?w=150&h=150\" title=\"Avatar\" link=\"#\"/>",
      " */",
      "",
      "export default function AvatarTS({",
      "  link,",
      "  image,",
      "  title,",
      "}: {",
      "  link?: string;",
      "  image: string;",
      "  title?: string;",
      "}) {",
      "  const STYLES = {",
      "    height: \"h-16\",",
      "    width: \"w-16\",",
      "    shape: \"rounded-md\",",
      "  };",
      "",
      "  return (",
      "    <a href={link} title={title ?? \"Avatar\"} className=\"relative block\">",
      "      <img",
      "        alt=\"profile\"",
      "        src={image}",
      "        className={`object-cover ${STYLES.height} ${STYLES.width} ${STYLES.shape}`}",
      "      />",
      "    </a>",
      "  );",
      "}",
      ""
    ]
  },
  "Avatar Clip": {
    "prefix": "ch-avatarClip",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <AvatarClip variant=\"triangle\" image=\"https://api.lorem.space/image/face?w=150&h=150\" title=\"Avatar Clip\" link=\"#\"/>",
      " */",
      "",
      "export default function AvatarClip({ link, image, title, variant }) {",
      "  const STYLES = {",
      "    height: \"h-16\",",
      "    width: \"w-16\",",
      "    clip: {",
      "      triangle: \"[clip-path:polygon(50%_0%,0%_100%,100%_100%)]\",",
      "      trapezoid: \"[clip-path:polygon(20%_0%,80%_0%,100%_100%,0%_100%)]\",",
      "      rhombus: \"[clip-path:polygon(50%_0%,100%_50%,50%_100%,0%_50%)]\",",
      "      pentagon: \"[clip-path:polygon(50%_0%,100%_38%,82%_100%,18%_100%,0%_38%)]\",",
      "      hexagon:",
      "        \"[clip-path:polygon(50%_0%,100%_25%,100%_75%,50%_100%,0%_75%,0%_25%)]\",",
      "      heptagon:",
      "        \"[clip-path:polygon(50%_0%,90%_20%,100%_60%,75%_100%,25%_100%,0%_60%,10%_20%)]\",",
      "      octagon:",
      "        \"[clip-path:polygon(30%_0%,70%_0%,100%_30%,100%_70%,70%_100%,30%_100%,0%_70%,0%_30%)]\",",
      "      nonagon:",
      "        \"[clip-path:polygon(50%_0%,83%_12%,100%_43%,94%_78%,68%_100%,32%_100%,6%_78%,0%_43%,17%_12%)]\",",
      "      decagon:",
      "        \"[clip-path:polygon(50%_0%,80%_10%,100%_35%,100%_70%,80%_90%,50%_100%,20%_90%,0%_70%,0%_35%,20%_10%)]\",",
      "      bevel:",
      "        \"[clip-path:polygon(20%_0%,80%_0%,100%_20%,100%_80%,80%_100%,20%_100%,0%_80%,0%_20%)]\",",
      "      star: \"[clip-path:polygon(50%_0%,61%_35%,98%_35%,68%_57%,79%_91%,50%_70%,21%_91%,32%_57%,2%_35%,39%_35%)]\",",
      "      ellipse: \"[clip-path:ellipse(25%_45%_at_50%_50%)]\",",
      "      ellipse2: \"[clip-path:ellipse(45%_25%_at_50%_50%)]\",",
      "    },",
      "  };",
      "",
      "  return (",
      "    <a href={link} title={title ?? \"Avatar\"} className=\"block relative\">",
      "      <img",
      "        alt=\"profile\"",
      "        src={image || \"https://api.lorem.space/image/face?w=150&h=150\"}",
      "        className={`object-cover ${STYLES.height} ${STYLES.width} ${",
      "          variant ? STYLES.clip[variant] : STYLES.clip.triangle",
      "        }`}",
      "      />",
      "    </a>",
      "  );",
      "}",
      ""
    ]
  },
  "Avatar Clip TS": {
    "prefix": "ch-avatarClipTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <AvatarClipTS variant=\"triangle\" image=\"https://api.lorem.space/image/face?w=150&h=150\" title=\"Avatar Clip\" link=\"#\"/>",
      " */",
      "",
      "export default function AvatarClipTS({",
      "  link,",
      "  image,",
      "  title,",
      "  variant,",
      "}: {",
      "  link?: string;",
      "  image: string;",
      "  title?: string;",
      "  variant:",
      "    | \"triangle\"",
      "    | \"trapezoid\"",
      "    | \"rhombus\"",
      "    | \"pentagon\"",
      "    | \"hexagon\"",
      "    | \"heptagon\"",
      "    | \"octagon\"",
      "    | \"nonagon\"",
      "    | \"decagon\"",
      "    | \"bevel\"",
      "    | \"star\"",
      "    | \"ellipse\"",
      "    | \"ellipse2\";",
      "}) {",
      "  const STYLES = {",
      "    height: \"h-16\",",
      "    width: \"w-16\",",
      "    clip: {",
      "      triangle: \"[clip-path:polygon(50%_0%,0%_100%,100%_100%)]\",",
      "      trapezoid: \"[clip-path:polygon(20%_0%,80%_0%,100%_100%,0%_100%)]\",",
      "      rhombus: \"[clip-path:polygon(50%_0%,100%_50%,50%_100%,0%_50%)]\",",
      "      pentagon: \"[clip-path:polygon(50%_0%,100%_38%,82%_100%,18%_100%,0%_38%)]\",",
      "      hexagon:",
      "        \"[clip-path:polygon(50%_0%,100%_25%,100%_75%,50%_100%,0%_75%,0%_25%)]\",",
      "      heptagon:",
      "        \"[clip-path:polygon(50%_0%,90%_20%,100%_60%,75%_100%,25%_100%,0%_60%,10%_20%)]\",",
      "      octagon:",
      "        \"[clip-path:polygon(30%_0%,70%_0%,100%_30%,100%_70%,70%_100%,30%_100%,0%_70%,0%_30%)]\",",
      "      nonagon:",
      "        \"[clip-path:polygon(50%_0%,83%_12%,100%_43%,94%_78%,68%_100%,32%_100%,6%_78%,0%_43%,17%_12%)]\",",
      "      decagon:",
      "        \"[clip-path:polygon(50%_0%,80%_10%,100%_35%,100%_70%,80%_90%,50%_100%,20%_90%,0%_70%,0%_35%,20%_10%)]\",",
      "      bevel:",
      "        \"[clip-path:polygon(20%_0%,80%_0%,100%_20%,100%_80%,80%_100%,20%_100%,0%_80%,0%_20%)]\",",
      "      star: \"[clip-path:polygon(50%_0%,61%_35%,98%_35%,68%_57%,79%_91%,50%_70%,21%_91%,32%_57%,2%_35%,39%_35%)]\",",
      "      ellipse: \"[clip-path:ellipse(25%_45%_at_50%_50%)]\",",
      "      ellipse2: \"[clip-path:ellipse(45%_25%_at_50%_50%)]\",",
      "    },",
      "  };",
      "",
      "  return (",
      "    <a href={link} title={title ?? \"Avatar\"} className=\"relative block\">",
      "      <img",
      "        alt=\"profile\"",
      "        src={image}",
      "        className={`object-cover ${STYLES.height} ${STYLES.width} ${STYLES.clip[variant]}`}",
      "      />",
      "    </a>",
      "  );",
      "}",
      ""
    ]
  },
  "Avatar Placeholder": {
    "prefix": "ch-avatarPlaceholder",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <AvatarPlaceholder",
      "      placeholder=\"PH\"",
      "        title=\"PH\"",
      "        link=\"#\"",
      "      />",
      " */",
      "",
      "export default function AvatarPlaceholder({ link, placeholder, title }) {",
      "  const STYLES = {",
      "    height: \"h-16\",",
      "    width: \"w-16\",",
      "    shape: \"rounded-md\",",
      "    color: \"bg-gray-700\",",
      "    text: \"text-3xl text-gray-300\",",
      "  };",
      "",
      "  return (",
      "    <a href={link} title={title ?? \"Avatar\"} className=\"block relative\">",
      "      <div",
      "        className={`${STYLES.height} ${STYLES.width} ${STYLES.shape} ${STYLES.color} place-items-center grid`}",
      "      >",
      "        <span className={`${STYLES.text}`}>{placeholder}</span>",
      "      </div>",
      "    </a>",
      "  );",
      "}",
      ""
    ]
  },
  "Avatar Placeholder TS": {
    "prefix": "ch-avatarPlaceholderTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <AvatarPlaceholderTS",
      "      placeholder=\"PH\"",
      "        title=\"PH\"",
      "        link=\"#\"",
      "      />",
      " */",
      "",
      "export default function AvatarPlaceholderTS({",
      "  link,",
      "  placeholder,",
      "  title,",
      "}: {",
      "  link?: string;",
      "  placeholder: string;",
      "  title?: string;",
      "}) {",
      "  const STYLES = {",
      "    height: \"h-16\",",
      "    width: \"w-16\",",
      "    shape: \"rounded-md\",",
      "    color: \"bg-gray-700\",",
      "    text: \"text-3xl text-gray-300\",",
      "  };",
      "",
      "  return (",
      "    <a href={link} title={title ?? \"Avatar\"} className=\"relative block\">",
      "      <div",
      "        className={`${STYLES.height} ${STYLES.width} ${STYLES.shape} ${STYLES.color} grid place-items-center`}",
      "      >",
      "        <span className={`${STYLES.text}`}>{placeholder}</span>",
      "      </div>",
      "    </a>",
      "  );",
      "}",
      ""
    ]
  },
  "Breadcrumb": {
    "prefix": "ch-breadcrumb",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React, { Fragment } from \"react\";",
      "",
      "/**",
      " * Example Data:",
      " * [",
      "    { title: \"Home\", link: \"/\" },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"/gallery\",",
      "    },",
      "    { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <BreadcrumbTS",
      "        data={[",
      "          { title: \"Home\", link: \"/\" },",
      "          { title: \"Snippets\", link: \"/snippets/accordion\" },",
      "          { title: \"Breadcrumbs\", link: \"/snippets/breadcrumb\" },",
      "        ]}",
      "      />",
      "  */",
      "",
      "export default function Breadcrumb({ data }) {",
      "  return (",
      "    <ul className=\"flex flex-row gap-2\">",
      "      {data.map((item, index) => (",
      "        <li",
      "          key={`Breadcrumb: ${item.title}`}",
      "          className=\"flex flex-row items-center gap-2\"",
      "        >",
      "          {data.length - 1 === index ? (",
      "            <a>{item.title}</a>",
      "          ) : (",
      "            <Fragment>",
      "              <a href={item.link} className=\"hover:underline\">",
      "                {item.title}",
      "              </a>",
      "              <svg",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "                fill=\"none\"",
      "                viewBox=\"0 0 24 24\"",
      "                strokeWidth=\"1.5\"",
      "                stroke=\"currentColor\"",
      "                className=\"w-3 h-3\"",
      "              >",
      "                <path",
      "                  strokeLinecap=\"round\"",
      "                  strokeLinejoin=\"round\"",
      "                  d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"",
      "                />",
      "              </svg>",
      "            </Fragment>",
      "          )}",
      "        </li>",
      "      ))}",
      "    </ul>",
      "  );",
      "}",
      ""
    ]
  },
  "Breadcrumb TS": {
    "prefix": "ch-breadcrumbTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { Fragment } from \"react\";",
      "",
      "/**",
      " * Example Data:",
      " * [",
      "    { title: \"Home\", link: \"/\" },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"/gallery\",",
      "    },",
      "    { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <BreadcrumbTS",
      "        data={[",
      "          { title: \"Home\", link: \"/\" },",
      "          { title: \"Snippets\", link: \"/snippets/accordion\" },",
      "          { title: \"Breadcrumbs\", link: \"/snippets/breadcrumb\" },",
      "        ]}",
      "      />",
      "  */",
      "",
      "export type BreadcrumbData = {",
      "  title: string;",
      "  link: string;",
      "};",
      "",
      "export default function BreadcrumbTS({ data }: { data: BreadcrumbData[] }) {",
      "  return (",
      "    <ul className=\"flex flex-row gap-2\">",
      "      {data.map((item, index) => (",
      "        <li",
      "          key={`Breadcrumb: ${item.title}`}",
      "          className=\"flex flex-row items-center gap-2\"",
      "        >",
      "          {data.length - 1 === index ? (",
      "            <a>{item.title}</a>",
      "          ) : (",
      "            <Fragment>",
      "              <a href={item.link} className=\"hover:underline\">",
      "                {item.title}",
      "              </a>",
      "              <svg",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "                fill=\"none\"",
      "                viewBox=\"0 0 24 24\"",
      "                strokeWidth=\"1.5\"",
      "                stroke=\"currentColor\"",
      "                className=\"h-3 w-3\"",
      "              >",
      "                <path",
      "                  strokeLinecap=\"round\"",
      "                  strokeLinejoin=\"round\"",
      "                  d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"",
      "                />",
      "              </svg>",
      "            </Fragment>",
      "          )}",
      "        </li>",
      "      ))}",
      "    </ul>",
      "  );",
      "}",
      ""
    ]
  },
  "Button": {
    "prefix": "ch-button",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Edit rounded-full to change shape",
      "// Replace blue with required color",
      "import React from \"react\";",
      "",
      "export default function Button({ type, onClick, disabled, children }) {",
      "  const STYLES = {",
      "    base: \"py-2 px-4 w-fit transition ease-in duration-200 focus:outline-none enabled:focus:ring-2 enabled:focus:ring-offset-2 enabled:active:scale-90 disabled:cursor-not-allowed\",",
      "    shape: \"rounded-full\",",
      "    shadow: \"shadow-md\",",
      "    color:",
      "      \"bg-blue-600 enabled:hover:bg-blue-700 enabled:focus:ring-blue-500 enabled:focus:ring-offset-blue-200\",",
      "    text: \"text-white text-center text-base font-semibold\",",
      "  };",
      "",
      "  return (",
      "    <button",
      "      type={type ?? \"button\"}",
      "      onClick={onClick}",
      "      disabled={disabled}",
      "      className={`${STYLES.base} ${STYLES.shadow} ${STYLES.color} ${STYLES.shape} ${STYLES.text}`}",
      "    >",
      "      {children}",
      "    </button>",
      "  );",
      "}",
      ""
    ]
  },
  "ButtonTS": {
    "prefix": "ch-buttonTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "// Edit rounded-full to change shape",
      "// Replace blue with required color",
      "import React, { ReactNode } from \"react\";",
      "",
      "export default function ButtonTS({",
      "  type,",
      "  onClick,",
      "  disabled,",
      "  children,",
      "}: {",
      "  type?: \"submit\" | \"reset\" | \"button\";",
      "  onClick?: React.MouseEventHandler;",
      "  disabled?: boolean;",
      "  children: ReactNode;",
      "}) {",
      "  const STYLES = {",
      "    base: \"py-2 px-4 w-fit transition ease-in duration-200 focus:outline-none enabled:focus:ring-2 enabled:focus:ring-offset-2 enabled:active:scale-90 disabled:cursor-not-allowed\",",
      "    shape: \"rounded-full\",",
      "    shadow: \"shadow-md\",",
      "    width: \"\",",
      "    color:",
      "      \"bg-blue-600 enabled:hover:bg-blue-700 enabled:focus:ring-blue-500 enabled:focus:ring-offset-blue-200\",",
      "    text: \"text-white text-center text-base font-semibold\",",
      "  };",
      "",
      "  return (",
      "    <button",
      "      type={type ?? \"button\"}",
      "      onClick={onClick}",
      "      disabled={disabled}",
      "      className={`${STYLES.base} ${STYLES.shadow} ${STYLES.color} ${STYLES.shape} ${STYLES.text}`}",
      "    >",
      "      {children}",
      "    </button>",
      "  );",
      "}",
      ""
    ]
  },
  "Icon Button": {
    "prefix": "ch-iconButton",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Edit rounded-full to change shape",
      "// Replace blue with required color",
      "import React from \"react\";",
      "",
      "export default function ButtonIcon({ type, onClick, disabled, children }) {",
      "  const STYLES = {",
      "    base: \"flex justify-center items-center gap-2 p-2 w-fit h-fit transition ease-in duration-200   focus:outline-none enabled:focus:ring-2 enabled:focus:ring-offset-2 enabled:active:scale-90 disabled:cursor-not-allowed\",",
      "    shadow: \"shadow-md\",",
      "    shape: \"rounded-full\",",
      "    color:",
      "      \"bg-blue-600 enabled:hover:bg-blue-700 enabled:focus:ring-blue-500 enabled:focus:ring-offset-blue-200\",",
      "    text: \"text-white text-center text-base font-semibold\",",
      "  };",
      "  return (",
      "    <button",
      "      type={type ?? \"button\"}",
      "      onClick={onClick}",
      "      disabled={disabled}",
      "      className={`${STYLES.base} ${STYLES.shadow} ${STYLES.color} ${STYLES.shape} ${STYLES.text}`}",
      "    >",
      "      {children}",
      "    </button>",
      "  );",
      "}",
      ""
    ]
  },
  "Icon Button TS": {
    "prefix": "ch-iconButtonTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "// Edit rounded-full to change shape",
      "// Replace blue with required color",
      "import React, { ReactNode } from \"react\";",
      "",
      "export default function ButtonIconTS({",
      "  type,",
      "  onClick,",
      "  disabled,",
      "  children,",
      "}: {",
      "  type?: \"submit\" | \"reset\" | \"button\";",
      "  onClick?: React.MouseEventHandler;",
      "  disabled?: boolean;",
      "  children: ReactNode;",
      "}) {",
      "  const STYLES = {",
      "    base: \"flex justify-center items-center gap-2 py-2 px-2 w-fit h-fit transition ease-in duration-200   focus:outline-none enabled:focus:ring-2 enabled:focus:ring-offset-2 enabled:active:scale-90 disabled:cursor-not-allowed\",",
      "    shadow: \"shadow-md\",",
      "    shape: \"rounded-full\",",
      "    color:",
      "      \"bg-blue-600 enabled:hover:bg-blue-700 enabled:focus:ring-blue-500 enabled:focus:ring-offset-blue-200\",",
      "    text: \"text-white text-center text-base font-semibold\",",
      "  };",
      "",
      "  return (",
      "    <button",
      "      type={type ?? \"button\"}",
      "      onClick={onClick}",
      "      disabled={disabled}",
      "      className={`${STYLES.base} ${STYLES.shadow} ${STYLES.color} ${STYLES.shape} ${STYLES.text}`}",
      "    >",
      "      {children}",
      "    </button>",
      "  );",
      "}",
      ""
    ]
  },
  "Button with Icon": {
    "prefix": "ch-buttonIcon",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Edit rounded-full to change shape",
      "// Replace blue with required color",
      "import React from \"react\";",
      "",
      "export default function ButtonWithIcon({ type, onClick, disabled, children }) {",
      "  const STYLES = {",
      "    base: \"flex justify-center items-center gap-2 py-2 px-4 w-fit transition ease-in duration-200 focus:outline-none enabled:focus:ring-2 enabled:focus:ring-offset-2 enabled:active:scale-90 disabled:cursor-not-allowed\",",
      "    shadow: \"shadow-md\",",
      "    shape: \"rounded-full\",",
      "    color:",
      "      \"bg-blue-600 enabled:hover:bg-blue-700 enabled:focus:ring-blue-500 enabled:focus:ring-offset-blue-200\",",
      "    text: \"text-white text-center text-base font-semibold\",",
      "  };",
      "  return (",
      "    <button",
      "      type={type ?? \"button\"}",
      "      onClick={onClick}",
      "      disabled={disabled}",
      "      className={`${STYLES.base} ${STYLES.shadow} ${STYLES.shape} ${STYLES.color} ${STYLES.text}`}",
      "    >",
      "      {children}",
      "    </button>",
      "  );",
      "}",
      ""
    ]
  },
  "Button with Icon TS": {
    "prefix": "ch-buttonIconTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "// Edit rounded-full to change shape",
      "// Replace blue with required color",
      "import React, { ReactNode } from \"react\";",
      "",
      "export default function ButtonWithIconTS({",
      "  type,",
      "  onClick,",
      "  disabled,",
      "  children,",
      "}: {",
      "  type?: \"submit\" | \"reset\" | \"button\";",
      "  onClick?: React.MouseEventHandler;",
      "  disabled?: boolean;",
      "  children: ReactNode;",
      "}) {",
      "  // Edit rounded-full to change shape",
      "  // Replace blue with required color",
      "  // Usage: TSbuttonWithIcon({type: 'button', onClick:customFunction})",
      "  const STYLES = {",
      "    base: \"flex justify-center items-center gap-2 py-2 px-4 w-fit transition ease-in duration-200 focus:outline-none enabled:focus:ring-2 enabled:focus:ring-offset-2 enabled:active:scale-90 disabled:cursor-not-allowed\",",
      "    shadow: \"shadow-md\",",
      "    shape: \"rounded-full\",",
      "    color:",
      "      \"bg-blue-600 enabled:hover:bg-blue-700 enabled:focus:ring-blue-500 enabled:focus:ring-offset-blue-200\",",
      "    text: \"text-white text-center text-base font-semibold\",",
      "  };",
      "  return (",
      "    <button",
      "      type={type ?? \"button\"}",
      "      onClick={onClick}",
      "      disabled={disabled}",
      "      className={`${STYLES.base} ${STYLES.shadow} ${STYLES.shape} ${STYLES.color} ${STYLES.text}`}",
      "    >",
      "      {children}",
      "    </button>",
      "  );",
      "}",
      ""
    ]
  },
  "Dropdown": {
    "prefix": "ch-dropdown",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design https://www.tailwind-kit.com/components/ddm",
      "// Replace button with one required. Eg Profile Image",
      "",
      "import React, { useState } from \"react\";",
      "",
      "/** Example Data:",
      "   const MENU = [",
      "    { title: \"Item 1\", link: \"/\" },",
      "    { title: \"Item 2\", link: \"/\" },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " *  <DropdownTS",
      "      title=\"Dropdown\"",
      "      data={[",
      "        {",
      "          title: \"Item 1\",",
      "          link: \"#\",",
      "        },",
      "        {",
      "          title: \"Item 2\",",
      "          link: \"#\",",
      "        },",
      "      ]}",
      "    />",
      " */",
      "",
      "export default function Dropdown({ data, title }) {",
      "  const [open, setOpen] = useState(false);",
      "",
      "  const STYLES = {",
      "    button: {",
      "      shape: \"rounded-md\",",
      "      shadow: \"shadow-sm\",",
      "      color:",
      "        \"border-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-500 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "      base: \"border flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "      text: \"text-sm font-medium text-gray-700 dark:text-gray-50\",",
      "    },",
      "    menu: {",
      "      shape: \"rounded-md\",",
      "      shadow: \"shadow-lg\",",
      "      color: \"bg-white dark:bg-gray-800 ring-black\",",
      "      text: \"\",",
      "      base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "    },",
      "    menuItem: {",
      "      shape: \"\",",
      "      shadow: \"\",",
      "      color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "      text: \"hover:text-gray-900 dark:text-gray-100 text-md text-gray-700 dark:hover:text-white\",",
      "      base: \"block items-center px-4 py-2\",",
      "    },",
      "  };",
      "  return (",
      "    <div className=\"relative inline-block text-left w-fit\">",
      "      <div>",
      "        <button",
      "          onClick={() => setOpen(!open)}",
      "          onBlur={() => setOpen(false)}",
      "          type=\"button\"",
      "          className={`${STYLES.button.shadow} ${STYLES.button.shape} ${STYLES.button.color} ${STYLES.button.text} ${STYLES.button.base}`}",
      "          id=\"options-menu\"",
      "        >",
      "          {title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              open ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </button>",
      "      </div>",
      "      <div",
      "        className={`${open ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"} ${",
      "          STYLES.menu.shape",
      "        } ${STYLES.menu.shadow} ${STYLES.menu.color} ${STYLES.menu.base}`}",
      "      >",
      "        <div",
      "          role=\"menu\"",
      "          aria-orientation=\"vertical\"",
      "          aria-labelledby=\"options-menu\"",
      "        >",
      "          {data.map((item) => (",
      "            <a",
      "              key={`MenuItem: ${item.title}`}",
      "              href={item.link}",
      "              className={`${STYLES.menuItem.color} ${STYLES.menuItem.text} ${STYLES.menuItem.base}`}",
      "              role=\"menuitem\"",
      "            >",
      "              <span className=\"flex flex-col\">",
      "                <span>{item.title}</span>",
      "              </span>",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Dropdown TS": {
    "prefix": "ch-dropdownTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "// Design https://www.tailwind-kit.com/components/ddm",
      "// Replace button with one required. Eg Profile Image",
      "",
      "import React, { useState } from \"react\";",
      "",
      "/** Example Data:",
      "   const MENU = [",
      "    { title: \"Item 1\", link: \"/\" },",
      "    { title: \"Item 2\", link: \"/\" },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " *  <DropdownTS",
      "      title=\"Dropdown\"",
      "      data={[",
      "        {",
      "          title: \"Item 1\",",
      "          link: \"#\",",
      "        },",
      "        {",
      "          title: \"Item 2\",",
      "          link: \"#\",",
      "        },",
      "      ]}",
      "    />",
      " */",
      "",
      "export type DropdownData = {",
      "  title: string;",
      "  link: string;",
      "};",
      "",
      "export default function DropdownTS({",
      "  data,",
      "  title,",
      "}: {",
      "  data: DropdownData[];",
      "  title: string;",
      "}) {",
      "  const [open, setOpen] = useState(false);",
      "",
      "  const STYLES = {",
      "    button: {",
      "      shape: \"rounded-md\",",
      "      shadow: \"shadow-sm\",",
      "      color:",
      "        \"border-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-500 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "      base: \"border flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "      text: \"text-sm font-medium text-gray-700 dark:text-gray-50\",",
      "    },",
      "    menu: {",
      "      shape: \"rounded-md\",",
      "      shadow: \"shadow-lg\",",
      "      color: \"bg-white dark:bg-gray-800 ring-black\",",
      "      text: \"\",",
      "      base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "    },",
      "    menuItem: {",
      "      shape: \"\",",
      "      shadow: \"\",",
      "      color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "      text: \"hover:text-gray-900 dark:text-gray-100 text-md text-gray-700 dark:hover:text-white\",",
      "      base: \"block items-center px-4 py-2\",",
      "    },",
      "  };",
      "  return (",
      "    <div className=\"relative inline-block w-fit text-left\">",
      "      <div>",
      "        <button",
      "          onClick={() => setOpen(!open)}",
      "          onBlur={() => setOpen(false)}",
      "          type=\"button\"",
      "          className={`${STYLES.button.shadow} ${STYLES.button.shape} ${STYLES.button.color} ${STYLES.button.text} ${STYLES.button.base}`}",
      "          id=\"options-menu\"",
      "        >",
      "          {title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              open ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </button>",
      "      </div>",
      "      <div",
      "        className={`${open ? \"scale-100 opacity-100\" : \"scale-0 opacity-0\"} ${",
      "          STYLES.menu.shape",
      "        } ${STYLES.menu.shadow} ${STYLES.menu.color} ${STYLES.menu.base}`}",
      "      >",
      "        <div",
      "          role=\"menu\"",
      "          aria-orientation=\"vertical\"",
      "          aria-labelledby=\"options-menu\"",
      "        >",
      "          {data.map((item) => (",
      "            <a",
      "              key={`MenuItem: ${item.title}`}",
      "              href={item.link}",
      "              className={`${STYLES.menuItem.color} ${STYLES.menuItem.text} ${STYLES.menuItem.base}`}",
      "              role=\"menuitem\"",
      "            >",
      "              <span className=\"flex flex-col\">",
      "                <span>{item.title}</span>",
      "              </span>",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Dropdown with Icon": {
    "prefix": "ch-dropdownIcon",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design https://www.tailwind-kit.com/components/ddm",
      "// Replace button with one required. Eg Profile Image",
      "",
      "import React, { useState } from \"react\";",
      "",
      "/** Example Data:",
      "   const MENU = [",
      "    {",
      "      title: \"Item 1\",",
      "      link: \"/\",",
      "      icon: (",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"h-5 w-5\"",
      "          viewBox=\"0 0 20 20\"",
      "          fill=\"currentColor\"",
      "        >",
      "          <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />",
      "        </svg>",
      "      ),",
      "    },",
      "    {",
      "      title: \"Item 2\",",
      "      link: \"/\",",
      "      icon: (",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"h-5 w-5\"",
      "          viewBox=\"0 0 20 20\"",
      "          fill=\"currentColor\"",
      "        >",
      "          <path",
      "            fillRule=\"evenodd\"",
      "            d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"",
      "            clipRule=\"evenodd\"",
      "          />",
      "        </svg>",
      "      ),",
      "    },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <DropdownWithIconTS",
      "    title=\"With Icons\"",
      "    data={[",
      "      {",
      "        title: \"Item 1\",",
      "        link: \"/\",",
      "        icon: (",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-5 w-5\"",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />",
      "          </svg>",
      "        ),",
      "      },",
      "      {",
      "        title: \"Item 2\",",
      "        link: \"/\",",
      "        icon: (",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-5 w-5\"",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        ),",
      "      },",
      "    ]}",
      "  />",
      " */",
      "",
      "export default function DropdownWithIcon({ title, data }) {",
      "  const [open, setOpen] = useState(false);",
      "",
      "  const STYLES = {",
      "    button: {",
      "      shape: \"rounded-md \",",
      "      shadow: \"shadow-sm\",",
      "      color:",
      "        \"border-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-500 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "      base: \"border flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "      text: \"text-sm font-medium text-gray-700 dark:text-gray-50\",",
      "    },",
      "    menu: {",
      "      shape: \"rounded-md\",",
      "      shadow: \"shadow-lg\",",
      "      color: \"bg-white dark:bg-gray-800 ring-black\",",
      "      text: \"\",",
      "      base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "    },",
      "    menuItem: {",
      "      shape: \"\",",
      "      shadow: \"\",",
      "      color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "      text: \"hover:text-gray-900 dark:text-gray-100 text-md text-gray-700 dark:hover:text-white\",",
      "      base: \"flex gap-4 items-center px-4 py-2\",",
      "    },",
      "  };",
      "",
      "  return (",
      "    <div className=\"relative inline-block text-left w-fit\">",
      "      <div>",
      "        <button",
      "          onClick={() => setOpen(!open)}",
      "          onBlur={() => setOpen(false)}",
      "          type=\"button\"",
      "          className={`${STYLES.button.shadow} ${STYLES.button.shape} ${STYLES.button.color} ${STYLES.button.text} ${STYLES.button.base}`}",
      "          id=\"options-menu\"",
      "        >",
      "          {title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              open ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </button>",
      "      </div>",
      "      <div",
      "        className={`${open ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"} ${",
      "          STYLES.menu.shape",
      "        } ${STYLES.menu.shadow} ${STYLES.menu.color} ${STYLES.menu.base}`}",
      "      >",
      "        <div",
      "          role=\"menu\"",
      "          aria-orientation=\"vertical\"",
      "          aria-labelledby=\"options-menu\"",
      "        >",
      "          {data.map((item) => (",
      "            <a",
      "              key={`MenuItem: ${item.title}`}",
      "              href={item.link}",
      "              className={`${STYLES.menuItem.color} ${STYLES.menuItem.text} ${STYLES.menuItem.base}`}",
      "              role=\"menuitem\"",
      "            >",
      "              {item.icon}",
      "              <span className=\"flex flex-col\">",
      "                <span>{item.title}</span>",
      "              </span>",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Dropdown with Icon TS": {
    "prefix": "ch-dropdownTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "// Design https://www.tailwind-kit.com/components/ddm",
      "// Replace button with one required. Eg Profile Image",
      "",
      "import React, { ReactNode, useState } from \"react\";",
      "",
      "/** Example Data:",
      "   const MENU = [",
      "    {",
      "      title: \"Item 1\",",
      "      link: \"/\",",
      "      icon: (",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"h-5 w-5\"",
      "          viewBox=\"0 0 20 20\"",
      "          fill=\"currentColor\"",
      "        >",
      "          <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />",
      "        </svg>",
      "      ),",
      "    },",
      "    {",
      "      title: \"Item 2\",",
      "      link: \"/\",",
      "      icon: (",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"h-5 w-5\"",
      "          viewBox=\"0 0 20 20\"",
      "          fill=\"currentColor\"",
      "        >",
      "          <path",
      "            fillRule=\"evenodd\"",
      "            d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"",
      "            clipRule=\"evenodd\"",
      "          />",
      "        </svg>",
      "      ),",
      "    },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <DropdownWithIconTS",
      "    title=\"With Icons\"",
      "    data={[",
      "      {",
      "        title: \"Item 1\",",
      "        link: \"/\",",
      "        icon: (",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-5 w-5\"",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />",
      "          </svg>",
      "        ),",
      "      },",
      "      {",
      "        title: \"Item 2\",",
      "        link: \"/\",",
      "        icon: (",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"h-5 w-5\"",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        ),",
      "      },",
      "    ]}",
      "  />",
      " */",
      "",
      "export type DropdownWithIconData = {",
      "  title: string;",
      "  link: string;",
      "  icon: ReactNode;",
      "};",
      "",
      "export default function DropdownWithIconTS({",
      "  data,",
      "  title,",
      "}: {",
      "  data: DropdownWithIconData[];",
      "  title: string;",
      "}) {",
      "  const [open, setOpen] = useState(false);",
      "",
      "  const STYLES = {",
      "    button: {",
      "      shape: \"rounded-md \",",
      "      shadow: \"shadow-sm\",",
      "      color:",
      "        \"border-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-500 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "      base: \"border flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "      text: \"text-sm font-medium text-gray-700 dark:text-gray-50\",",
      "    },",
      "    menu: {",
      "      shape: \"rounded-md\",",
      "      shadow: \"shadow-lg\",",
      "      color: \"bg-white dark:bg-gray-800 ring-black\",",
      "      text: \"\",",
      "      base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "    },",
      "    menuItem: {",
      "      shape: \"\",",
      "      shadow: \"\",",
      "      color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "      text: \"hover:text-gray-900 dark:text-gray-100 text-md text-gray-700 dark:hover:text-white\",",
      "      base: \"flex gap-4 items-center px-4 py-2\",",
      "    },",
      "  };",
      "",
      "  return (",
      "    <div className=\"relative inline-block w-fit text-left\">",
      "      <div>",
      "        <button",
      "          onClick={() => setOpen(!open)}",
      "          onBlur={() => setOpen(false)}",
      "          type=\"button\"",
      "          className={`${STYLES.button.shadow} ${STYLES.button.shape} ${STYLES.button.color} ${STYLES.button.text} ${STYLES.button.base}`}",
      "          id=\"options-menu\"",
      "        >",
      "          {title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              open ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </button>",
      "      </div>",
      "      <div",
      "        className={`${open ? \"scale-100 opacity-100\" : \"scale-0 opacity-0\"} ${",
      "          STYLES.menu.shape",
      "        } ${STYLES.menu.shadow} ${STYLES.menu.color} ${STYLES.menu.base}`}",
      "      >",
      "        <div",
      "          role=\"menu\"",
      "          aria-orientation=\"vertical\"",
      "          aria-labelledby=\"options-menu\"",
      "        >",
      "          {data.map((item) => (",
      "            <a",
      "              key={`MenuItem: ${item.title}`}",
      "              href={item.link}",
      "              className={`${STYLES.menuItem.color} ${STYLES.menuItem.text} ${STYLES.menuItem.base}`}",
      "              role=\"menuitem\"",
      "            >",
      "              {item.icon}",
      "              <span className=\"flex flex-col\">",
      "                <span>{item.title}</span>",
      "              </span>",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Code Mockup": {
    "prefix": "ch-codeTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <CodeTS code={[\"Hello\", `   World`]} />",
      " */",
      "",
      "export default function CodeTS({ code }: { code: string[] }) {",
      "  return (",
      "    <div className=\"relative cursor-text rounded-lg border-2 border-transparent bg-gray-800 pb-4 text-slate-300 transition-colors duration-300 hover:border-gray-300\">",
      "      <div className=\"flex justify-end gap-2 pb-2\">",
      "        <svg",
      "          stroke=\"currentColor\"",
      "          fill=\"currentColor\"",
      "          strokeWidth=\"0\"",
      "          viewBox=\"0 0 1024 1024\"",
      "          height=\"1em\"",
      "          width=\"1em\"",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"hover:bg-gray-500 hover:text-white\"",
      "        >",
      "          <path d=\"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"></path>",
      "        </svg>",
      "        <svg",
      "          stroke=\"currentColor\"",
      "          fill=\"currentColor\"",
      "          strokeWidth=\"0\"",
      "          viewBox=\"0 0 16 16\"",
      "          height=\"1em\"",
      "          width=\"1em\"",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"hover:bg-gray-500 hover:text-white\"",
      "        >",
      "          <path d=\"M3 3v10h10V3H3zm9 9H4V4h8v8z\"></path>",
      "        </svg>",
      "        <svg",
      "          stroke=\"currentColor\"",
      "          fill=\"currentColor\"",
      "          strokeWidth=\"0\"",
      "          viewBox=\"0 0 1024 1024\"",
      "          height=\"1em\"",
      "          width=\"1em\"",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"hover:bg-red-500 hover:text-white\"",
      "        >",
      "          <path d=\"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"></path>",
      "        </svg>",
      "      </div>",
      "      {code.map((line, index) => (",
      "        <pre key={`Code Line: ${index}`} className=\"overflow-hidden pl-4\">",
      "          <code>{line}</code>",
      "        </pre>",
      "      ))}",
      "",
      "      <div className=\"animate-[pulse_1000ms_infinite] pl-2\">",
      "        <svg",
      "          stroke=\"currentColor\"",
      "          fill=\"none\"",
      "          strokeWidth=\"2\"",
      "          viewBox=\"0 0 24 24\"",
      "          strokeLinecap=\"round\"",
      "          strokeLinejoin=\"round\"",
      "          height=\"1em\"",
      "          width=\"1em\"",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "        >",
      "          <desc></desc>",
      "          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>",
      "          <path d=\"M10 12h4\"></path>",
      "          <path d=\"M9 4a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3\"></path>",
      "          <path d=\"M15 4a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3\"></path>",
      "        </svg>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Phone Mockup": {
    "prefix": "ch-phone",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Phone>",
      "    <div className=\"flex flex-col justify-center items-center w-full h-full\">",
      "      Hello",
      "    </div>",
      "  </Phone>",
      " */",
      "",
      "function Phone({ children }) {",
      "  return (",
      "    <div className=\"relative w-52 h-96 border-8 border-black rounded-2xl bg-white dark:bg-slate-800\">",
      "      <div className=\"absolute h-16 w-2 bg-black top-14 -left-3 rounded-l\"></div>",
      "      <div className=\"absolute h-16 w-2 bg-black top-32 -left-3 rounded-l\"></div>",
      "      <div className=\"absolute h-16 w-2 bg-black top-14 -right-3 rounded-r\"></div>",
      "      <div className=\"absolute h-6 w-6 bg-black top-2 right-4 rounded-full\"></div>",
      "      {children}",
      "    </div>",
      "  );",
      "}",
      "",
      "export default Phone;",
      ""
    ]
  },
  "Window Mockup": {
    "prefix": "ch-window",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Window>",
      "    <div className=\"flex flex-col justify-center items-center w-full h-full\">",
      "      Hello",
      "    </div>",
      "  </Window>",
      " */",
      "",
      "export default function Window({ children }) {",
      "  return (",
      "    <div className=\"relative rounded-lg bg-white dark:bg-slate-800 dark:text-white text-black border-2 border-black h-full\">",
      "      <div className=\"pt-2 border-b-2 border-black  rounded-t-lg bg-blue-400\">",
      "        <div className=\"flex justify-end pr-4 pb-2 gap-2\">",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 1024 1024\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"></path>",
      "          </svg>",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M3 3v10h10V3H3zm9 9H4V4h8v8z\"></path>",
      "          </svg>",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 1024 1024\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"></path>",
      "          </svg>",
      "        </div>",
      "      </div>",
      "",
      "      <div className=\"w-full h-full\">{children}</div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Window (MAC) Mockup": {
    "prefix": "ch-windowMac",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <WindowMac>",
      "    <div className=\"flex flex-col justify-center items-center w-full h-full\">",
      "      Hello",
      "    </div>",
      "  </WindowMac>",
      " */",
      "",
      "export default function WindowMac({ children }) {",
      "  return (",
      "    <div className=\"relative rounded-lg border-2 border-black h-full bg-white dark:bg-slate-800\">",
      "      <div className=\"pl-4 pt-2 border-b-2 border-black rounded-t-lg bg-gray-300 dark:bg-gray-800\">",
      "        <div className=\"flex justify-start pb-2 gap-2\">",
      "          <div className=\"h-4 w-4 rounded-full bg-red-500 border-2 border-red-600\" />",
      "          <div className=\"h-4 w-4 rounded-full bg-yellow-500 border-2 border-yellow-600\" />",
      "          <div className=\"h-4 w-4 rounded-full bg-green-500 border-2 border-green-600\" />",
      "        </div>",
      "      </div>",
      "      <div className=\"w-full h-full\">{children}</div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Modal": {
    "prefix": "ch-modal",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React, { Fragment } from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Button onClick={() => setOpen(true)}>Open</Button>",
      "   <ModalLogin open={open} toggle={setOpen} />",
      " */",
      "",
      "export default function Modal({ open, toggle }) {",
      "  if (open)",
      "    return (",
      "      <Fragment>",
      "        <div",
      "          onClick={() => toggle(!open)}",
      "          className=\"fixed inset-0 z-[100] bg-gray-700/90 cursor-pointer\"",
      "        ></div>",
      "        <div className=\"z-[110] fixed top-1/2 left-1/2 translate-x-[-50%] translate-y-[-50%] flex justify-center items-center my-auto \">",
      "          <div className=\"max-w-xs md:max-w-5xl z-10 bg-white dark:bg-gray-800 text-gray-800 dark:text-white p-4 shadow-lg rounded-lg\">",
      "            <h1 className=\"text-xl font-bold\">I&apos;m A modal.</h1>",
      "            <p>Click outside of me to close.</p>",
      "          </div>",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  return null;",
      "}",
      ""
    ]
  },
  "Modal TS": {
    "prefix": "ch-modalTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { Dispatch, Fragment, SetStateAction } from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <ButtonTS onClick={() => setOpen(true)}>Open</ButtonTS>",
      "   <ModalTS open={open} toggle={setOpen} />",
      " */",
      "",
      "export default function ModalTS({",
      "  open,",
      "  toggle,",
      "}: {",
      "  open: boolean;",
      "  toggle: Dispatch<SetStateAction<boolean>>;",
      "}) {",
      "  if (open)",
      "    return (",
      "      <Fragment>",
      "        <div",
      "          onClick={() => toggle(!open)}",
      "          className=\"fixed inset-0 z-[100] cursor-pointer bg-gray-700/90\"",
      "        ></div>",
      "        <div className=\"fixed top-1/2 left-1/2 z-[110] flex translate-x-[-50%] translate-y-[-50%] items-center justify-center\">",
      "          <div className=\"z-10 max-w-xs rounded-lg bg-white p-4 text-gray-800 shadow-lg dark:bg-gray-800 dark:text-white md:max-w-5xl\">",
      "            <h1 className=\"text-xl font-bold\">I&apos;m A modal.</h1>",
      "            <p>Click outside of me to close.</p>",
      "          </div>",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  return null;",
      "}",
      ""
    ]
  },
  "Login Modal": {
    "prefix": "ch-modalLogin",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React, { Fragment, useEffect, useState } from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Button onClick={() => setOpen(true)}>Login</Button>",
      "   <ModalLogin open={open} toggle={setOpen} />",
      " */",
      "",
      "export default function ModalLogin({ open, toggle }) {",
      "  // Providers",
      "  const PROVIDERS = { google: true, github: true, apple: true, facebook: true };",
      "",
      "  // Variables",
      "  const [email, setEmail] = useState(\"\");",
      "  const [firstName, setFirstName] = useState(\"\");",
      "  const [lastName, setLastName] = useState(\"\");",
      "  const [password, setPassword] = useState(\"\");",
      "  const [cPassword, setCPassword] = useState(\"\");",
      "  const [showErrorMessage, setShowErrorMessage] = useState(false);",
      "  const [emailOk, setEmailOk] = useState(false);",
      "  const [login, setLogin] = useState(true);",
      "  const [forgotten, setForgotten] = useState(false);",
      "",
      "  // Interaction Functions",
      "  const isValidEmail = () => {",
      "    setEmailOk(!/\\S+@\\S+\\.\\S+/.test(email));",
      "  };",
      "  const handleSignupProvider = async (provider) => {",
      "    if (provider === \"google\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"github\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"apple\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"facebook\") {",
      "      // Do something",
      "    }",
      "  };",
      "  const handleSignUp = async () => {};",
      "  const handleLoginProvider = async (provider) => {",
      "    if (provider === \"google\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"github\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"apple\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"facebook\") {",
      "      // Do something",
      "    }",
      "  };",
      "  const handleLoginEmail = async () => {};",
      "  const handleForgottenPassword = async () => {};",
      "",
      "  // Effects",
      "  useEffect(() => {",
      "    if (password === cPassword) {",
      "      setShowErrorMessage(false);",
      "    } else {",
      "      setShowErrorMessage(true);",
      "    }",
      "  }, [password, cPassword]);",
      "",
      "  useEffect(() => {",
      "    isValidEmail();",
      "  }, [email]);",
      "",
      "  // UI Functions",
      "",
      "  function ProviderButtonsLogin(provider) {",
      "    if (provider === \"google\") {",
      "      return (",
      "        <button",
      "          onClick={async () => handleLoginProvider(provider)}",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            version=\"1.1\"",
      "            x=\"0px\"",
      "            y=\"0px\"",
      "            viewBox=\"0 0 48 48\"",
      "            enableBackground=\"new 0 0 48 48\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path",
      "              fill=\"#FFC107\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12",
      "\tc0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24",
      "\tc0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#FF3D00\"",
      "              d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657",
      "\tC34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#4CAF50\"",
      "              d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36",
      "\tc-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#1976D2\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571",
      "\tc0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"github\") {",
      "      return (",
      "        <button",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "          onClick={async () => handleLoginProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 1024 1024\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"apple\") {",
      "      return (",
      "        <button",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "          onClick={async () => handleLoginProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"facebook\") {",
      "      return (",
      "        <button",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "          onClick={async () => handleLoginProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "  }",
      "",
      "  function ProviderButtonsSignup(provider) {",
      "    if (provider === \"google\") {",
      "      return (",
      "        <button",
      "          onClick={async () => handleSignupProvider(provider)}",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            version=\"1.1\"",
      "            x=\"0px\"",
      "            y=\"0px\"",
      "            viewBox=\"0 0 48 48\"",
      "            enableBackground=\"new 0 0 48 48\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path",
      "              fill=\"#FFC107\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12",
      "\tc0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24",
      "\tc0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#FF3D00\"",
      "              d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657",
      "\tC34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#4CAF50\"",
      "              d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36",
      "\tc-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#1976D2\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571",
      "\tc0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"github\") {",
      "      return (",
      "        <button",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "          onClick={async () => handleSignupProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 1024 1024\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"apple\") {",
      "      return (",
      "        <button",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "          onClick={async () => handleSignupProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"facebook\") {",
      "      return (",
      "        <button",
      "          className=\"w-full justify-center border border-emerald-500 rounded p-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-110\"",
      "          onClick={async () => handleSignupProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "  }",
      "",
      "  function ModalData() {",
      "    if (forgotten) {",
      "      return (",
      "        <Fragment>",
      "          <h1 className=\"pb-4 font-bold text-3xl text-center text-emerald-500\">",
      "            Forgotten Password",
      "          </h1>",
      "          <form>",
      "            <div className=\"grid grid-cols-1 gap-6\">",
      "              <label className=\"block\">",
      "                <span className=\"text-emerald-500\">Email address</span>",
      "                <input",
      "                  type=\"email\"",
      "                  placeholder=\"john@example.com\"",
      "                  value={email}",
      "                  onChange={(e) => {",
      "                    setEmail(e.target.value);",
      "                  }}",
      "                  className={`mt-0  p-1 block w-full rounded border-2 focus:ring-0 dark:bg-slate-700 ${",
      "                    emailOk",
      "                      ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                      : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                  }`}",
      "                />",
      "              </label>",
      "            </div>",
      "            <div className=\"flex justify-center py-4\">",
      "              <button",
      "                disabled={emailOk}",
      "                className=\"w-full justify-center cursor-pointer disabled:cursor-not-allowed border border-emerald-500 rounded px-4 py-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-90 disabled:scale-100\"",
      "                onClick={() => handleForgottenPassword()}",
      "              >",
      "                Reset Password",
      "              </button>",
      "            </div>",
      "            <div className=\"flex justify-center pb-4\">",
      "              <button",
      "                className=\"w-full justify-center rounded px-4 py-2 flex gap-2 items-center text-lg font-semibold bg-red-500 hover:text-white transition-colors duration-300 active:scale-90\"",
      "                onClick={() => setForgotten(false)}",
      "              >",
      "                Cancel",
      "              </button>",
      "            </div>",
      "          </form>",
      "        </Fragment>",
      "      );",
      "    }",
      "    if (login) {",
      "      return (",
      "        <Fragment>",
      "          <h1 className=\"pb-4 font-bold text-3xl text-center text-emerald-500\">",
      "            Log in",
      "          </h1>",
      "          <div className=\"flex justify-between gap-2\">",
      "            {Object.keys(PROVIDERS).map((provider) => {",
      "              if (PROVIDERS[provider] === true)",
      "                return ProviderButtonsLogin(provider);",
      "              return null;",
      "            })}",
      "          </div>",
      "",
      "          <div className=\"relative flex items-center py-5\">",
      "            <div className=\"grow border-t border-emerald-400\"></div>",
      "            <span className=\"mx-4 shrink text-emerald-400\">or with Email</span>",
      "            <div className=\"grow border-t border-emerald-400\"></div>",
      "          </div>",
      "          <form>",
      "            <div className=\"grid grid-cols-1 gap-6\">",
      "              <label className=\"block\">",
      "                <span className=\"text-emerald-500\">Email address</span>",
      "                <input",
      "                  type=\"email\"",
      "                  placeholder=\"john@example.com\"",
      "                  value={email}",
      "                  onChange={(e) => {",
      "                    setEmail(e.target.value);",
      "                  }}",
      "                  className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                    emailOk",
      "                      ? \"border-red-300 hover:border-red-500 focus:border-red-500\"",
      "                      : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                  }`}",
      "                />",
      "              </label>",
      "              <label className=\"block\">",
      "                <span className=\"text-emerald-500\">Password</span>",
      "                <input",
      "                  type=\"password\"",
      "                  placeholder=\"\"",
      "                  value={password}",
      "                  onChange={(e) => {",
      "                    setPassword(e.target.value);",
      "                  }}",
      "                  className=\"mt-0 block w-full rounded border-2 border-x-transparent border-t-transparent border-b-emerald-500 p-1 hover:border-emerald-500 focus:border-emerald-500 focus:ring-0 dark:bg-slate-700\"",
      "                />",
      "              </label>",
      "            </div>",
      "            <p",
      "              onClick={() => setForgotten(true)}",
      "              className=\"pt-4 text-right text-emerald-500 hover:cursor-pointer hover:underline\"",
      "            >",
      "              Forgot Password.",
      "            </p>",
      "            <div className=\"flex justify-center py-4\">",
      "              <button",
      "                disabled={emailOk || password.length < 8}",
      "                className=\"w-full justify-center border cursor-pointer disabled:cursor-not-allowed border-emerald-500 rounded px-4 py-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-90 disabled:scale-100\"",
      "                onClick={() => handleLoginEmail()}",
      "              >",
      "                Sign In",
      "              </button>",
      "            </div>",
      "          </form>",
      "",
      "          <p",
      "            onClick={() => setLogin(false)}",
      "            className=\"pt-4 text-center text-emerald-500 hover:cursor-pointer hover:underline\"",
      "          >",
      "            Don&apos;t have an account? Sign up",
      "          </p>",
      "        </Fragment>",
      "      );",
      "    }",
      "    return (",
      "      <Fragment>",
      "        <h1 className=\"pb-4 font-bold text-3xl text-center text-emerald-500\">",
      "          Sign up",
      "        </h1>",
      "        <div className=\"flex justify-between gap-2\">",
      "          {Object.keys(PROVIDERS).map((provider) => {",
      "            if (PROVIDERS[provider] === true)",
      "              return ProviderButtonsSignup(provider);",
      "            return null;",
      "          })}",
      "        </div>",
      "        <div className=\"relative flex items-center py-5\">",
      "          <div className=\"grow border-t border-emerald-400\"></div>",
      "          <span className=\"mx-4 shrink text-emerald-400\">or with Email</span>",
      "          <div className=\"grow border-t border-emerald-400\"></div>",
      "        </div>",
      "        <form>",
      "          <div className=\"grid grid-cols-1 gap-6\">",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">First Name</span>",
      "              <input",
      "                type=\"text\"",
      "                placeholder=\"john\"",
      "                value={firstName}",
      "                minLength={2}",
      "                onChange={(e) => {",
      "                  setFirstName(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  firstName.length <= 2",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Last Name</span>",
      "              <input",
      "                type=\"text\"",
      "                placeholder=\"doe\"",
      "                value={lastName}",
      "                onChange={(e) => {",
      "                  setLastName(e.target.value);",
      "                }}",
      "                minLength={2}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  lastName.length <= 2",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Email address</span>",
      "              <input",
      "                type=\"email\"",
      "                placeholder=\"john@example.com\"",
      "                value={email}",
      "                onChange={(e) => {",
      "                  setEmail(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  emailOk",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Password</span>",
      "              <input",
      "                type=\"password\"",
      "                placeholder=\"\"",
      "                value={password}",
      "                minLength={8}",
      "                onChange={(e) => {",
      "                  setPassword(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  password.length <= 8",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Confirm Password</span>",
      "              <input",
      "                type=\"password\"",
      "                placeholder=\"\"",
      "                value={cPassword}",
      "                minLength={8}",
      "                onChange={(e) => {",
      "                  setCPassword(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  showErrorMessage || cPassword.length <= 8",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "          </div>",
      "          <div className=\"flex justify-center py-4\">",
      "            <button",
      "              disabled={",
      "                showErrorMessage ||",
      "                emailOk ||",
      "                firstName.length < 2 ||",
      "                lastName.length < 2 ||",
      "                password.length < 8 ||",
      "                cPassword.length < 8",
      "              }",
      "              className=\"w-full justify-center cursor-pointer disabled:cursor-not-allowed border border-emerald-500 rounded px-4 py-2 flex gap-2 items-center text-lg font-semibold hover:bg-emerald-500 hover:text-white transition-colors duration-300 active:scale-90 disabled:scale-100\"",
      "              onClick={() => handleSignUp()}",
      "            >",
      "              Sign up",
      "            </button>",
      "          </div>",
      "        </form>",
      "",
      "        <p",
      "          onClick={() => setLogin(true)}",
      "          className=\"text-emerald-500 hover:cursor-pointer hover:underline\"",
      "        >",
      "          Already have an account? Login in",
      "        </p>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  if (open)",
      "    return (",
      "      <Fragment>",
      "        <div",
      "          onClick={() => toggle(!open)}",
      "          className=\"fixed inset-0 z-[100] bg-gray-700/90 cursor-pointer\"",
      "        ></div>",
      "        <div className=\"z-[110] fixed top-1/2 left-1/2 translate-x-[-50%] translate-y-[-50%] flex justify-center items-center\">",
      "          <div className=\"max-w-xs md:max-w-5xl z-10 bg-white dark:bg-gray-800 text-gray-800 dark:text-white p-4 shadow-lg rounded-lg flex-col md:w-96\">",
      "            {ModalData()}",
      "          </div>",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  return null;",
      "}",
      ""
    ]
  },
  "Login Modal TS": {
    "prefix": "ch-windowMac",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, {",
      "  Dispatch,",
      "  Fragment,",
      "  SetStateAction,",
      "  useEffect,",
      "  useState,",
      "} from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <ButtonTS onClick={() => setOpen(true)}>Login</ButtonTS>",
      "   <ModalLoginTS open={open} toggle={setOpen} />",
      " */",
      "",
      "export default function ModalLoginTS({",
      "  open,",
      "  toggle,",
      "}: {",
      "  open: boolean;",
      "  toggle: Dispatch<SetStateAction<boolean>>;",
      "}) {",
      "  // Providers",
      "  const PROVIDERS: { [key: string]: boolean } = {",
      "    google: true,",
      "    github: true,",
      "    apple: true,",
      "    facebook: true,",
      "  };",
      "",
      "  // Variables",
      "  const [email, setEmail] = useState(\"\");",
      "  const [firstName, setFirstName] = useState(\"\");",
      "  const [lastName, setLastName] = useState(\"\");",
      "  const [password, setPassword] = useState(\"\");",
      "  const [cPassword, setCPassword] = useState(\"\");",
      "  const [showErrorMessage, setShowErrorMessage] = useState(false);",
      "  const [emailOk, setEmailOk] = useState(false);",
      "  const [login, setLogin] = useState(true);",
      "  const [forgotten, setForgotten] = useState(false);",
      "",
      "  // Interaction Functions",
      "  const isValidEmail = () => {",
      "    setEmailOk(!/\\S+@\\S+\\.\\S+/.test(email));",
      "  };",
      "  const handleSignupProvider = async (provider: string) => {",
      "    if (provider === \"google\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"github\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"apple\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"facebook\") {",
      "      // Do something",
      "    }",
      "  };",
      "  const handleSignUp = async () => {};",
      "  const handleLoginProvider = async (provider: string) => {",
      "    if (provider === \"google\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"github\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"apple\") {",
      "      // Do something",
      "    }",
      "    if (provider === \"facebook\") {",
      "      // Do something",
      "    }",
      "  };",
      "  const handleLoginEmail = async () => {};",
      "  const handleForgottenPassword = async () => {};",
      "",
      "  // Effects",
      "  useEffect(() => {",
      "    if (password === cPassword) {",
      "      setShowErrorMessage(false);",
      "    } else {",
      "      setShowErrorMessage(true);",
      "    }",
      "  }, [password, cPassword]);",
      "",
      "  useEffect(() => {",
      "    isValidEmail();",
      "  }, [email]);",
      "",
      "  // UI Functions",
      "",
      "  function ProviderButtonsLogin(provider: string) {",
      "    if (provider === \"google\") {",
      "      return (",
      "        <button",
      "          onClick={async () => handleLoginProvider(provider)}",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            version=\"1.1\"",
      "            x=\"0px\"",
      "            y=\"0px\"",
      "            viewBox=\"0 0 48 48\"",
      "            enableBackground=\"new 0 0 48 48\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path",
      "              fill=\"#FFC107\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12",
      "\tc0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24",
      "\tc0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#FF3D00\"",
      "              d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657",
      "\tC34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#4CAF50\"",
      "              d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36",
      "\tc-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#1976D2\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571",
      "\tc0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"github\") {",
      "      return (",
      "        <button",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "          onClick={async () => handleLoginProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 1024 1024\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"apple\") {",
      "      return (",
      "        <button",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "          onClick={async () => handleLoginProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"facebook\") {",
      "      return (",
      "        <button",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "          onClick={async () => handleLoginProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "  }",
      "",
      "  function ProviderButtonsSignup(provider: string) {",
      "    if (provider === \"google\") {",
      "      return (",
      "        <button",
      "          onClick={async () => handleSignupProvider(provider)}",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            version=\"1.1\"",
      "            x=\"0px\"",
      "            y=\"0px\"",
      "            viewBox=\"0 0 48 48\"",
      "            enableBackground=\"new 0 0 48 48\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path",
      "              fill=\"#FFC107\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12",
      "\tc0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24",
      "\tc0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#FF3D00\"",
      "              d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657",
      "\tC34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#4CAF50\"",
      "              d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36",
      "\tc-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"",
      "            ></path>",
      "            <path",
      "              fill=\"#1976D2\"",
      "              d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571",
      "\tc0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\"",
      "            ></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"github\") {",
      "      return (",
      "        <button",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "          onClick={async () => handleSignupProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 1024 1024\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"apple\") {",
      "      return (",
      "        <button",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "          onClick={async () => handleSignupProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "            <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "    if (provider === \"facebook\") {",
      "      return (",
      "        <button",
      "          className=\"flex w-full items-center justify-center gap-2 rounded border border-emerald-500 p-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-110\"",
      "          onClick={async () => handleSignupProvider(provider)}",
      "        >",
      "          <svg",
      "            stroke=\"currentColor\"",
      "            fill=\"currentColor\"",
      "            strokeWidth=\"0\"",
      "            viewBox=\"0 0 16 16\"",
      "            height=\"1em\"",
      "            width=\"1em\"",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "          >",
      "            <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"></path>",
      "          </svg>",
      "        </button>",
      "      );",
      "    }",
      "  }",
      "",
      "  function ModalData() {",
      "    if (forgotten) {",
      "      return (",
      "        <Fragment>",
      "          <h1 className=\"pb-4 text-center text-3xl font-bold text-emerald-500\">",
      "            Forgotten Password",
      "          </h1>",
      "          <form>",
      "            <div className=\"grid grid-cols-1 gap-6\">",
      "              <label className=\"block\">",
      "                <span className=\"text-emerald-500\">Email address</span>",
      "                <input",
      "                  type=\"email\"",
      "                  placeholder=\"john@example.com\"",
      "                  value={email}",
      "                  onChange={(e) => {",
      "                    setEmail(e.target.value);",
      "                  }}",
      "                  className={`mt-0  block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                    emailOk",
      "                      ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                      : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                  }`}",
      "                />",
      "              </label>",
      "            </div>",
      "            <div className=\"flex justify-center py-4\">",
      "              <button",
      "                disabled={emailOk}",
      "                className=\"flex w-full cursor-pointer items-center justify-center gap-2 rounded border border-emerald-500 px-4 py-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-90 disabled:scale-100 disabled:cursor-not-allowed\"",
      "                onClick={() => handleForgottenPassword()}",
      "              >",
      "                Reset Password",
      "              </button>",
      "            </div>",
      "            <div className=\"flex justify-center pb-4\">",
      "              <button",
      "                className=\"flex w-full items-center justify-center gap-2 rounded bg-red-500 px-4 py-2 text-lg font-semibold transition-colors duration-300 hover:text-white active:scale-90 disabled:scale-100\"",
      "                onClick={() => setForgotten(false)}",
      "              >",
      "                Cancel",
      "              </button>",
      "            </div>",
      "          </form>",
      "        </Fragment>",
      "      );",
      "    }",
      "    if (login) {",
      "      return (",
      "        <Fragment>",
      "          <h1 className=\"pb-4 text-center text-3xl font-bold text-emerald-500\">",
      "            Log in",
      "          </h1>",
      "          <div className=\"flex justify-between gap-2\">",
      "            {Object.keys(PROVIDERS).map((provider) => {",
      "              if (PROVIDERS[provider] === true)",
      "                return ProviderButtonsLogin(provider);",
      "              return null;",
      "            })}",
      "          </div>",
      "",
      "          <div className=\"relative flex items-center py-5\">",
      "            <div className=\"grow border-t border-emerald-400\"></div>",
      "            <span className=\"mx-4 shrink text-emerald-400\">or with Email</span>",
      "            <div className=\"grow border-t border-emerald-400\"></div>",
      "          </div>",
      "          <form>",
      "            <div className=\"grid grid-cols-1 gap-6\">",
      "              <label className=\"block\">",
      "                <span className=\"text-emerald-500\">Email address</span>",
      "                <input",
      "                  type=\"email\"",
      "                  placeholder=\"john@example.com\"",
      "                  value={email}",
      "                  onChange={(e) => {",
      "                    setEmail(e.target.value);",
      "                  }}",
      "                  className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                    emailOk",
      "                      ? \"border-red-300 hover:border-red-500 focus:border-red-500\"",
      "                      : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                  }`}",
      "                />",
      "              </label>",
      "              <label className=\"block\">",
      "                <span className=\"text-emerald-500\">Password</span>",
      "                <input",
      "                  type=\"password\"",
      "                  placeholder=\"\"",
      "                  value={password}",
      "                  onChange={(e) => {",
      "                    setPassword(e.target.value);",
      "                  }}",
      "                  className=\"mt-0 block w-full rounded border-2 border-x-transparent border-t-transparent border-b-emerald-500 p-1 hover:border-emerald-500 focus:border-emerald-500 focus:ring-0 dark:bg-slate-700\"",
      "                />",
      "              </label>",
      "            </div>",
      "            <p",
      "              onClick={() => setForgotten(true)}",
      "              className=\"pt-4 text-right text-emerald-500 hover:cursor-pointer hover:underline\"",
      "            >",
      "              Forgot Password.",
      "            </p>",
      "            <div className=\"flex justify-center py-4\">",
      "              <button",
      "                disabled={emailOk || password.length < 8}",
      "                className=\"flex w-full cursor-pointer items-center justify-center gap-2 rounded border border-emerald-500 px-4 py-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-90 disabled:scale-100 disabled:cursor-not-allowed\"",
      "                onClick={() => handleLoginEmail()}",
      "              >",
      "                Sign In",
      "              </button>",
      "            </div>",
      "          </form>",
      "",
      "          <p",
      "            onClick={() => setLogin(false)}",
      "            className=\"pt-4 text-center text-emerald-500 hover:cursor-pointer hover:underline\"",
      "          >",
      "            Don&apos;t have an account? Sign up",
      "          </p>",
      "        </Fragment>",
      "      );",
      "    }",
      "    return (",
      "      <Fragment>",
      "        <h1 className=\"pb-4 text-center text-3xl font-bold text-emerald-500\">",
      "          Sign up",
      "        </h1>",
      "        <div className=\"flex justify-between gap-2\">",
      "          {Object.keys(PROVIDERS).map((provider) => {",
      "            if (PROVIDERS[provider] === true)",
      "              return ProviderButtonsSignup(provider);",
      "            return null;",
      "          })}",
      "        </div>",
      "        <div className=\"relative flex items-center py-5\">",
      "          <div className=\"grow border-t border-emerald-400\"></div>",
      "          <span className=\"mx-4 shrink text-emerald-400\">or with Email</span>",
      "          <div className=\"grow border-t border-emerald-400\"></div>",
      "        </div>",
      "        <form>",
      "          <div className=\"grid grid-cols-1 gap-6\">",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">First Name</span>",
      "              <input",
      "                type=\"text\"",
      "                placeholder=\"john\"",
      "                value={firstName}",
      "                minLength={2}",
      "                onChange={(e) => {",
      "                  setFirstName(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  firstName.length <= 2",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Last Name</span>",
      "              <input",
      "                type=\"text\"",
      "                placeholder=\"doe\"",
      "                value={lastName}",
      "                onChange={(e) => {",
      "                  setLastName(e.target.value);",
      "                }}",
      "                minLength={2}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  lastName.length <= 2",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Email address</span>",
      "              <input",
      "                type=\"email\"",
      "                placeholder=\"john@example.com\"",
      "                value={email}",
      "                onChange={(e) => {",
      "                  setEmail(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  emailOk",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Password</span>",
      "              <input",
      "                type=\"password\"",
      "                placeholder=\"\"",
      "                value={password}",
      "                minLength={8}",
      "                onChange={(e) => {",
      "                  setPassword(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  password.length <= 8",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "            <label className=\"block\">",
      "              <span className=\"text-emerald-500\">Confirm Password</span>",
      "              <input",
      "                type=\"password\"",
      "                placeholder=\"\"",
      "                value={cPassword}",
      "                minLength={8}",
      "                onChange={(e) => {",
      "                  setCPassword(e.target.value);",
      "                }}",
      "                className={`mt-0 block w-full rounded border-2 p-1 focus:ring-0 dark:bg-slate-700 ${",
      "                  showErrorMessage || cPassword.length <= 8",
      "                    ? \"border-x-transparent border-t-transparent border-b-red-300 hover:border-red-500 focus:border-red-500\"",
      "                    : \"border-x-transparent border-t-transparent border-b-emerald-500 hover:border-emerald-500 focus:border-emerald-500\"",
      "                }`}",
      "              />",
      "            </label>",
      "          </div>",
      "          <div className=\"flex justify-center py-4\">",
      "            <button",
      "              disabled={",
      "                showErrorMessage ||",
      "                emailOk ||",
      "                firstName.length < 2 ||",
      "                lastName.length < 2 ||",
      "                password.length < 8 ||",
      "                cPassword.length < 8",
      "              }",
      "              className=\"flex w-full cursor-pointer items-center justify-center gap-2 rounded border border-emerald-500 px-4 py-2 text-lg font-semibold transition-colors duration-300 hover:bg-emerald-500 hover:text-white active:scale-90 disabled:scale-100 disabled:cursor-not-allowed\"",
      "              onClick={() => handleSignUp()}",
      "            >",
      "              Sign up",
      "            </button>",
      "          </div>",
      "        </form>",
      "",
      "        <p",
      "          onClick={() => setLogin(true)}",
      "          className=\"text-emerald-500 hover:cursor-pointer hover:underline\"",
      "        >",
      "          Already have an account? Login in",
      "        </p>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  if (open)",
      "    return (",
      "      <Fragment>",
      "        <div",
      "          onClick={() => toggle(!open)}",
      "          className=\"fixed inset-0 z-[100] cursor-pointer bg-gray-700/90\"",
      "        ></div>",
      "        <div className=\"fixed top-1/2 left-1/2 z-[110] flex translate-x-[-50%] translate-y-[-50%] items-center justify-center \">",
      "          <div className=\"z-10 max-w-xs flex-col rounded-lg bg-white p-4 text-gray-800 shadow-lg dark:bg-gray-800 dark:text-white md:w-96 md:max-w-5xl\">",
      "            {ModalData()}",
      "          </div>",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  return null;",
      "}",
      ""
    ]
  },
  "Navbar V1 (Next.Js)": {
    "prefix": "ch-navbarV1Next",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design from https://www.tailwind-kit.com/components/header",
      "",
      "import Link from \"next/link\";",
      "import { useRouter } from \"next/router\";",
      "import { useEffect, useState, Fragment } from \"react\";",
      "",
      "export default function Navbar() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useRouter();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Styles",
      "  const STYLES = {",
      "    navbarColor: \"bg-white dark:bg-gray-800\",",
      "    navbarHeight: \" h-16\",",
      "    brand: \"text-gray-800 dark:text-white text-2xl font-bold\",",
      "    link: \"text-gray-300 hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    linkActive:",
      "      \"text-gray-800 dark:text-white  hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    mobileLink:",
      "      \"text-gray-300 hover:text-gray-800 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    mobileLinkActive:",
      "      \"text-gray-800 dark:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    toggle:",
      "      \"text-gray-800 dark:text-white hover:text-gray-300 inline-flex items-center justify-center p-2 rounded-md focus:outline-none\",",
      "  };",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    { title: \"Home\", link: \"/\", subMenu: [] },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  // Navbar State",
      "  const [open, setOpen] = useState(false);",
      "",
      "  // Dropdown",
      "  function dropdown(menuItem) {",
      "    // eslint-disable-next-line react-hooks/rules-of-hooks",
      "    const [openD, setOpenD] = useState(false);",
      "",
      "    const DROPDOWN_STYLES = {",
      "      button: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-sm\",",
      "        color:",
      "          \"bg-white dark:bg-gray-800 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "        base: \"flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "        text: \"text-sm font-medium\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "      },",
      "      menu: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-lg\",",
      "        color: \"bg-white dark:bg-gray-800 ring-black\",",
      "        text: \"\",",
      "        base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "      },",
      "      menuItem: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"\",",
      "        color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "        base: \"block items-center px-4 py-2\",",
      "      },",
      "    };",
      "    return (",
      "      <div key={menuItem.title} className=\"relative inline-block text-left\">",
      "        <div>",
      "          <button",
      "            onClick={() => setOpenD(!openD)}",
      "            onMouseOver={() => setOpenD(true)}",
      "            onMouseLeave={() => setOpenD(false)}",
      "            onBlur={() => setOpenD(false)}",
      "            type=\"button\"",
      "            className={`${DROPDOWN_STYLES.button.shadow} ${DROPDOWN_STYLES.button.shape} ${DROPDOWN_STYLES.button.color} ${DROPDOWN_STYLES.button.text} ${DROPDOWN_STYLES.button.textColor} ${DROPDOWN_STYLES.button.base}`}",
      "            id=\"options-menu\"",
      "          >",
      "            {menuItem.title}",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                openD ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </button>",
      "        </div>",
      "        <div",
      "          onMouseOver={() => setOpenD(true)}",
      "          onMouseLeave={() => setOpenD(false)}",
      "          className={`${",
      "            openD ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"",
      "          } ${DROPDOWN_STYLES.menu.shape} ${DROPDOWN_STYLES.menu.shadow} ${",
      "            DROPDOWN_STYLES.menu.color",
      "          } ${DROPDOWN_STYLES.menu.base}`}",
      "        >",
      "          <div",
      "            role=\"menu\"",
      "            aria-orientation=\"vertical\"",
      "            aria-labelledby=\"options-menu\"",
      "          >",
      "            {menuItem.subMenu.map((item) => (",
      "              <a",
      "                key={\"MenuItem:\" + item.title}",
      "                href={item.link}",
      "                className={`${DROPDOWN_STYLES.menuItem.color} ${",
      "                  DROPDOWN_STYLES.menuItem.shape",
      "                } ${DROPDOWN_STYLES.menuItem.base} ${",
      "                  pathname.includes(item.link)",
      "                    ? DROPDOWN_STYLES.menuItem.textColorActive",
      "                    : DROPDOWN_STYLES.menuItem.textColor",
      "                }`}",
      "                role=\"menuitem\"",
      "              >",
      "                <span className=\"flex flex-col\">",
      "                  <span>{item.title}</span>",
      "                </span>",
      "              </a>",
      "            ))}",
      "          </div>",
      "        </div>",
      "      </div>",
      "    );",
      "  }",
      "",
      "  // Accordion for mobile menu",
      "  function accordion(menuItem) {",
      "    // eslint-disable-next-line react-hooks/rules-of-hooks",
      "    const [openA, setOpenA] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`mobileMenu: ${menuItem.title}`}>",
      "        <a",
      "          onClick={() => setOpenA(!openA)}",
      "          className={`flex gap-2 items-center ${STYLES.mobileLink}`}",
      "        >",
      "          {menuItem.title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              openA ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            openA ? \" h-fit\" : \"scale-y-0 opacity-0 -translate-y-2 h-0\"",
      "          } px-4 origin-top transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <Link href={item.link} key={`mobileMenu: ${item.title}`}>",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link)",
      "                    ? STYLES.mobileLinkActive",
      "                    : STYLES.mobileLink",
      "                }",
      "              >",
      "                {item.title}",
      "              </a>",
      "            </Link>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <nav className={STYLES.navbarColor}>",
      "      <div className=\"max-w-7xl mx-auto px-8\">",
      "        <div",
      "          className={`flex items-center justify-between ${STYLES.navbarHeight}`}",
      "        >",
      "          <div className=\"flex items-center\">",
      "            <a className=\"flex-shrink-0\" href=\"/\">",
      "              <h1 className={STYLES.brand}>{BRAND}</h1>",
      "            </a>",
      "            <div className=\"hidden md:block\">",
      "              <div className=\"ml-10 flex items-baseline space-x-4\">",
      "                {MENU.map((item) => {",
      "                  if (item.subMenu && item.subMenu.length > 0) {",
      "                    return dropdown(item);",
      "                  }",
      "                  return (",
      "                    <Link key={`menu: ${item.title}`} href={item.link}>",
      "                      <a",
      "                        className={",
      "                          pathname.includes(item.link)",
      "                            ? STYLES.linkActive",
      "                            : STYLES.link",
      "                        }",
      "                      >",
      "                        {item.title}",
      "                      </a>",
      "                    </Link>",
      "                  );",
      "                })}",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"block\">",
      "            <div className=\"ml-4 flex items-center md:ml-6\"></div>",
      "          </div>",
      "          <div className=\"-mr-2 flex md:hidden\">",
      "            <button onClick={() => setOpen(!open)} className={STYLES.toggle}>",
      "              <svg",
      "                width=\"20\"",
      "                height=\"20\"",
      "                fill=\"currentColor\"",
      "                className=\"h-8 w-8\"",
      "                viewBox=\"0 0 1792 1792\"",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "              >",
      "                <path d=\"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"></path>",
      "              </svg>",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "      <div className={`${open ? \"\" : \"hidden\"} md:hidden`}>",
      "        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">",
      "          {MENU.map((item) => {",
      "            if (item.subMenu && item.subMenu.length > 0) {",
      "              return accordion(item);",
      "            }",
      "            return (",
      "              <Link href={item.link} key={`mobileMenu: ${item.title}`}>",
      "                <a",
      "                  className={",
      "                    pathname.includes(item.link)",
      "                      ? STYLES.mobileLinkActive",
      "                      : STYLES.mobileLink",
      "                  }",
      "                >",
      "                  {item.title}",
      "                </a>",
      "              </Link>",
      "            );",
      "          })}",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "}",
      ""
    ]
  },
  "Navbar V1 (React)": {
    "prefix": "ch-navbarV1React",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design from https://www.tailwind-kit.com/components/header",
      "",
      "import { useEffect, useState, Fragment } from \"react\";",
      "import { useLocation } from \"react-router-dom\";",
      "",
      "export default function Navbar() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useLocation();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Styles",
      "  const STYLES = {",
      "    navbarColor: \"bg-white dark:bg-gray-800\",",
      "    navbarHeight: \" h-16\",",
      "    brand: \"text-gray-800 dark:text-white text-2xl font-bold\",",
      "    link: \"text-gray-300 hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    linkActive:",
      "      \"text-gray-800 dark:text-white  hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    mobileLink:",
      "      \"text-gray-300 hover:text-gray-800 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    mobileLinkActive:",
      "      \"text-gray-800 dark:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    toggle:",
      "      \"text-gray-800 dark:text-white hover:text-gray-300 inline-flex items-center justify-center p-2 rounded-md focus:outline-none\",",
      "  };",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    { title: \"Home\", link: \"/\", subMenu: [] },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  // Navbar State",
      "  const [open, setOpen] = useState(false);",
      "",
      "  // Dropdown",
      "  function dropdown(menuItem) {",
      "    const [openD, setOpenD] = useState(false);",
      "",
      "    const DROPDOWN_STYLES = {",
      "      button: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-sm\",",
      "        color:",
      "          \"bg-white dark:bg-gray-800 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "        base: \"flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "        text: \"text-sm font-medium\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "      },",
      "      menu: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-lg\",",
      "        color: \"bg-white dark:bg-gray-800 ring-black\",",
      "        text: \"\",",
      "        base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "      },",
      "      menuItem: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"\",",
      "        color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "        base: \"block items-center px-4 py-2\",",
      "      },",
      "    };",
      "    return (",
      "      <div key={menuItem.title} className=\"relative inline-block text-left\">",
      "        <div>",
      "          <button",
      "            onClick={() => setOpenD(!openD)}",
      "            onMouseOver={() => setOpenD(true)}",
      "            onMouseLeave={() => setOpenD(false)}",
      "            onBlur={() => setOpenD(false)}",
      "            type=\"button\"",
      "            className={`${DROPDOWN_STYLES.button.shadow} ${DROPDOWN_STYLES.button.shape} ${DROPDOWN_STYLES.button.color} ${DROPDOWN_STYLES.button.text} ${DROPDOWN_STYLES.button.textColor} ${DROPDOWN_STYLES.button.base}`}",
      "            id=\"options-menu\"",
      "          >",
      "            {menuItem.title}",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                openD ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </button>",
      "        </div>",
      "        <div",
      "          onMouseOver={() => setOpenD(true)}",
      "          onMouseLeave={() => setOpenD(false)}",
      "          className={`${",
      "            openD ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"",
      "          } ${DROPDOWN_STYLES.menu.shape} ${DROPDOWN_STYLES.menu.shadow} ${",
      "            DROPDOWN_STYLES.menu.color",
      "          } ${DROPDOWN_STYLES.menu.base}`}",
      "        >",
      "          <div",
      "            role=\"menu\"",
      "            aria-orientation=\"vertical\"",
      "            aria-labelledby=\"options-menu\"",
      "          >",
      "            {menuItem.subMenu.map((item) => (",
      "              <a",
      "                key={\"MenuItem:\" + item.title}",
      "                href={item.link}",
      "                className={`${DROPDOWN_STYLES.menuItem.color} ${",
      "                  DROPDOWN_STYLES.menuItem.shape",
      "                } ${DROPDOWN_STYLES.menuItem.base} ${",
      "                  pathname.includes(item.link)",
      "                    ? DROPDOWN_STYLES.menuItem.textColorActive",
      "                    : DROPDOWN_STYLES.menuItem.textColor",
      "                }`}",
      "                role=\"menuitem\"",
      "              >",
      "                <span className=\"flex flex-col\">",
      "                  <span>{item.title}</span>",
      "                </span>",
      "              </a>",
      "            ))}",
      "          </div>",
      "        </div>",
      "      </div>",
      "    );",
      "  }",
      "",
      "  // Accordion for mobile menu",
      "  function accordion(menuItem) {",
      "    const [openA, setOpenA] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`mobileMenu: ${menuItem.title}`}>",
      "        <a",
      "          onClick={() => setOpenA(!openA)}",
      "          className={`flex gap-2 items-center ${STYLES.mobileLink}`}",
      "        >",
      "          {menuItem.title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              openA ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            openA ? \" h-fit\" : \"scale-y-0 opacity-0 -translate-y-2 h-0\"",
      "          } px-4 origin-top transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <a",
      "              href={item.link}",
      "              key={`mobileMenu: ${item.title}`}",
      "              className={",
      "                pathname.includes(item.link)",
      "                  ? STYLES.mobileLinkActive",
      "                  : STYLES.mobileLink",
      "              }",
      "            >",
      "              {item.title}",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <nav className={STYLES.navbarColor}>",
      "      <div className=\"max-w-7xl mx-auto px-8\">",
      "        <div",
      "          className={`flex items-center justify-between ${STYLES.navbarHeight}`}",
      "        >",
      "          <div className=\" flex items-center\">",
      "            <a className=\"flex-shrink-0\" href=\"/\">",
      "              <h1 className={STYLES.brand}>{BRAND}</h1>",
      "            </a>",
      "            <div className=\"hidden md:block\">",
      "              <div className=\"ml-10 flex items-baseline space-x-4\">",
      "                {MENU.map((item) => {",
      "                  if (item.submenu && item.submenu.length > 0) {",
      "                    return dropdown(item);",
      "                  }",
      "                  return (",
      "                    <a",
      "                      className={",
      "                        pathname.includes(item.link)",
      "                          ? STYLES.linkActive",
      "                          : STYLES.link",
      "                      }",
      "                      href={item.link}",
      "                      key={`menu: ${item.title}`}",
      "                    >",
      "                      {item.title}",
      "                    </a>",
      "                  );",
      "                })}",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"block\">",
      "            <div className=\"ml-4 flex items-center md:ml-6\"></div>",
      "          </div>",
      "          <div className=\"-mr-2 flex md:hidden\">",
      "            <button onClick={() => setOpen(!open)} className={STYLES.toggle}>",
      "              <svg",
      "                width=\"20\"",
      "                height=\"20\"",
      "                fill=\"currentColor\"",
      "                className=\"h-8 w-8\"",
      "                viewBox=\"0 0 1792 1792\"",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "              >",
      "                <path d=\"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"></path>",
      "              </svg>",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "      <div className={`${open ? \"\" : \"hidden\"} md:hidden`}>",
      "        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">",
      "          {MENU.map((item) => {",
      "            if (item.subment && item.submenu.length > 0) {",
      "              accordion(item);",
      "            }",
      "            return (",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link)",
      "                    ? STYLES.mobileLinkActive",
      "                    : STYLES.mobileLink",
      "                }",
      "                href={item.link}",
      "                key={`mobileMenu: ${item.title}`}",
      "              >",
      "                {item.title}",
      "              </a>",
      "            );",
      "          })}",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "}",
      ""
    ]
  },
  "Navbar V2 (Next.Js)": {
    "prefix": "ch-navbarV2Next",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design from https://www.tailwind-kit.com/components/header",
      "",
      "import Link from \"next/link\";",
      "import { useRouter } from \"next/router\"; // Uncomment if using Next.js",
      "import { useEffect, useState, Fragment } from \"react\";",
      "",
      "export default function Navbar() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useRouter();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Styles",
      "  const STYLES = {",
      "    navbarColor: \"bg-white dark:bg-gray-800\",",
      "    navbarHeight: \" h-16\",",
      "    brand: \"text-gray-800 dark:text-white text-2xl font-bold\",",
      "    link: \"text-gray-300 hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    linkActive:",
      "      \"text-gray-800 dark:text-white  hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    mobileLink:",
      "      \"text-gray-300 hover:text-gray-800 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    mobileLinkActive:",
      "      \"text-gray-800 dark:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    toggle:",
      "      \"text-gray-800 dark:text-white hover:text-gray-300 inline-flex items-center justify-center p-2 rounded-md focus:outline-none\",",
      "  };",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    { title: \"Home\", link: \"/\", subMenu: [] },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  // Navbar State",
      "  const [open, setOpen] = useState(false);",
      "",
      "  // Dropdown",
      "  function dropdown(menuItem) {",
      "    const [openD, setOpenD] = useState(false);",
      "",
      "    const DROPDOWN_STYLES = {",
      "      button: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-sm\",",
      "        color:",
      "          \"bg-white dark:bg-gray-800 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "        base: \"flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "        text: \"text-sm font-medium\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "      },",
      "      menu: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-lg\",",
      "        color: \"bg-white dark:bg-gray-800 ring-black\",",
      "        text: \"\",",
      "        base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "      },",
      "      menuItem: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"\",",
      "        color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "        base: \"block items-center px-4 py-2\",",
      "      },",
      "    };",
      "    return (",
      "      <div key={menuItem.title} className=\"relative inline-block text-left\">",
      "        <div>",
      "          <button",
      "            onClick={() => setOpenD(!openD)}",
      "            onMouseOver={() => setOpenD(true)}",
      "            onMouseLeave={() => setOpenD(false)}",
      "            onBlur={() => setOpenD(false)}",
      "            type=\"button\"",
      "            className={`${DROPDOWN_STYLES.button.shadow} ${DROPDOWN_STYLES.button.shape} ${DROPDOWN_STYLES.button.color} ${DROPDOWN_STYLES.button.text} ${DROPDOWN_STYLES.button.textColor} ${DROPDOWN_STYLES.button.base}`}",
      "            id=\"options-menu\"",
      "          >",
      "            {menuItem.title}",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                openD ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </button>",
      "        </div>",
      "        <div",
      "          onMouseOver={() => setOpenD(true)}",
      "          onMouseLeave={() => setOpenD(false)}",
      "          className={`${",
      "            openD ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"",
      "          } ${DROPDOWN_STYLES.menu.shape} ${DROPDOWN_STYLES.menu.shadow} ${",
      "            DROPDOWN_STYLES.menu.color",
      "          } ${DROPDOWN_STYLES.menu.base}`}",
      "        >",
      "          <div",
      "            role=\"menu\"",
      "            aria-orientation=\"vertical\"",
      "            aria-labelledby=\"options-menu\"",
      "          >",
      "            {menuItem.subMenu.map((item) => (",
      "              <a",
      "                key={\"MenuItem:\" + item.title}",
      "                href={item.link}",
      "                className={`${DROPDOWN_STYLES.menuItem.color} ${",
      "                  DROPDOWN_STYLES.menuItem.shape",
      "                } ${DROPDOWN_STYLES.menuItem.base} ${",
      "                  pathname.includes(item.link)",
      "                    ? DROPDOWN_STYLES.menuItem.textColorActive",
      "                    : DROPDOWN_STYLES.menuItem.textColor",
      "                }`}",
      "                role=\"menuitem\"",
      "              >",
      "                <span className=\"flex flex-col\">",
      "                  <span>{item.title}</span>",
      "                </span>",
      "              </a>",
      "            ))}",
      "          </div>",
      "        </div>",
      "      </div>",
      "    );",
      "  }",
      "",
      "  // Accordion for mobile menu",
      "  function accordion(menuItem) {",
      "    const [openA, setOpenA] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`mobileMenu: ${menuItem.title}`}>",
      "        <a",
      "          onClick={() => setOpenA(!openA)}",
      "          className={`flex gap-2 items-center ${STYLES.mobileLink}`}",
      "        >",
      "          {menuItem.title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              openA ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            openA ? \" h-fit\" : \"scale-y-0 opacity-0 -translate-y-2 h-0\"",
      "          } px-4 origin-top transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <Link href={item.link} key={`mobileMenu: ${item.title}`}>",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link)",
      "                    ? STYLES.mobileLinkActive",
      "                    : STYLES.mobileLink",
      "                }",
      "              >",
      "                {item.title}",
      "              </a>",
      "            </Link>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <nav className={STYLES.navbarColor}>",
      "      <div className=\"max-w-7xl mx-auto px-8\">",
      "        <div",
      "          className={`flex items-center justify-between ${STYLES.navbarHeight}`}",
      "        >",
      "          <div className=\"w-full justify-between flex items-center\">",
      "            <a className=\"flex-shrink-0\" href=\"/\">",
      "              <h1 className={STYLES.brand}>{BRAND}</h1>",
      "            </a>",
      "            <div className=\"hidden md:block\">",
      "              <div className=\"ml-10 flex items-baseline space-x-4\">",
      "                {MENU.map((item) => {",
      "                  if (item.subMenu && item.subMenu.length > 0) {",
      "                    return dropdown(item);",
      "                  }",
      "                  return (",
      "                    <Link key={`menu: ${item.title}`} href={item.link}>",
      "                      <a",
      "                        className={",
      "                          pathname.includes(item.link)",
      "                            ? STYLES.linkActive",
      "                            : STYLES.link",
      "                        }",
      "                      >",
      "                        {item.title}",
      "                      </a>",
      "                    </Link>",
      "                  );",
      "                })}",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"block\">",
      "            <div className=\"ml-4 flex items-center md:ml-6\"></div>",
      "          </div>",
      "          <div className=\"-mr-2 flex md:hidden\">",
      "            <button onClick={() => setOpen(!open)} className={STYLES.toggle}>",
      "              <svg",
      "                width=\"20\"",
      "                height=\"20\"",
      "                fill=\"currentColor\"",
      "                className=\"h-8 w-8\"",
      "                viewBox=\"0 0 1792 1792\"",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "              >",
      "                <path d=\"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"></path>",
      "              </svg>",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "      <div className={`${open ? \"\" : \"hidden\"} md:hidden`}>",
      "        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">",
      "          {MENU.map((item) => {",
      "            if (item.subMenu && item.subMenu.length > 0) {",
      "              return accordion(item);",
      "            }",
      "            return (",
      "              <Link href={item.link} key={`mobileMenu: ${item.title}`}>",
      "                <a",
      "                  className={",
      "                    pathname.includes(item.link)",
      "                      ? STYLES.mobileLinkActive",
      "                      : STYLES.mobileLink",
      "                  }",
      "                >",
      "                  {item.title}",
      "                </a>",
      "              </Link>",
      "            );",
      "          })}",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "}",
      ""
    ]
  },
  "Navbar V2 (React)": {
    "prefix": "ch-navbarV2React",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design from https://www.tailwind-kit.com/components/header",
      "",
      "import { useEffect, useState, Fragment } from \"react\";",
      "import { useLocation } from \"react-router-dom\";",
      "",
      "export default function Navbar() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useRouter();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Styles",
      "  const STYLES = {",
      "    navbarColor: \"bg-white dark:bg-gray-800\",",
      "    navbarHeight: \" h-16\",",
      "    brand: \"text-gray-800 dark:text-white text-2xl font-bold\",",
      "    link: \"text-gray-300 hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    linkActive:",
      "      \"text-gray-800 dark:text-white  hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    mobileLink:",
      "      \"text-gray-300 hover:text-gray-800 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    mobileLinkActive:",
      "      \"text-gray-800 dark:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    toggle:",
      "      \"text-gray-800 dark:text-white hover:text-gray-300 inline-flex items-center justify-center p-2 rounded-md focus:outline-none\",",
      "  };",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    { title: \"Home\", link: \"/\", subMenu: [] },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  // Navbar State",
      "  const [open, setOpen] = useState(false);",
      "",
      "  // Dropdown",
      "  function dropdown(menuItem) {",
      "    const [openD, setOpenD] = useState(false);",
      "",
      "    const DROPDOWN_STYLES = {",
      "      button: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-sm\",",
      "        color:",
      "          \"bg-white dark:bg-gray-800 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "        base: \"flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "        text: \"text-sm font-medium\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "      },",
      "      menu: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-lg\",",
      "        color: \"bg-white dark:bg-gray-800 ring-black\",",
      "        text: \"\",",
      "        base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "      },",
      "      menuItem: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"\",",
      "        color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "        base: \"block items-center px-4 py-2\",",
      "      },",
      "    };",
      "    return (",
      "      <div key={menuItem.title} className=\"relative inline-block text-left\">",
      "        <div>",
      "          <button",
      "            onClick={() => setOpenD(!openD)}",
      "            onMouseOver={() => setOpenD(true)}",
      "            onMouseLeave={() => setOpenD(false)}",
      "            onBlur={() => setOpenD(false)}",
      "            type=\"button\"",
      "            className={`${DROPDOWN_STYLES.button.shadow} ${DROPDOWN_STYLES.button.shape} ${DROPDOWN_STYLES.button.color} ${DROPDOWN_STYLES.button.text} ${DROPDOWN_STYLES.button.textColor} ${DROPDOWN_STYLES.button.base}`}",
      "            id=\"options-menu\"",
      "          >",
      "            {menuItem.title}",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                openD ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </button>",
      "        </div>",
      "        <div",
      "          onMouseOver={() => setOpenD(true)}",
      "          onMouseLeave={() => setOpenD(false)}",
      "          className={`${",
      "            openD ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"",
      "          } ${DROPDOWN_STYLES.menu.shape} ${DROPDOWN_STYLES.menu.shadow} ${",
      "            DROPDOWN_STYLES.menu.color",
      "          } ${DROPDOWN_STYLES.menu.base}`}",
      "        >",
      "          <div",
      "            role=\"menu\"",
      "            aria-orientation=\"vertical\"",
      "            aria-labelledby=\"options-menu\"",
      "          >",
      "            {menuItem.subMenu.map((item) => (",
      "              <a",
      "                key={\"MenuItem:\" + item.title}",
      "                href={item.link}",
      "                className={`${DROPDOWN_STYLES.menuItem.color} ${",
      "                  DROPDOWN_STYLES.menuItem.shape",
      "                } ${DROPDOWN_STYLES.menuItem.base} ${",
      "                  pathname.includes(item.link)",
      "                    ? DROPDOWN_STYLES.menuItem.textColorActive",
      "                    : DROPDOWN_STYLES.menuItem.textColor",
      "                }`}",
      "                role=\"menuitem\"",
      "              >",
      "                <span className=\"flex flex-col\">",
      "                  <span>{item.title}</span>",
      "                </span>",
      "              </a>",
      "            ))}",
      "          </div>",
      "        </div>",
      "      </div>",
      "    );",
      "  }",
      "",
      "  // Accordion for mobile menu",
      "  function accordion(menuItem) {",
      "    const [openA, setOpenA] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`mobileMenu: ${menuItem.title}`}>",
      "        <a",
      "          onClick={() => setOpenA(!openA)}",
      "          className={`flex gap-2 items-center ${STYLES.mobileLink}`}",
      "        >",
      "          {menuItem.title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              openA ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            openA ? \" h-fit\" : \"scale-y-0 opacity-0 -translate-y-2 h-0\"",
      "          } px-4 origin-top transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <a",
      "              href={item.link}",
      "              key={`mobileMenu: ${item.title}`}",
      "              className={",
      "                pathname.includes(item.link)",
      "                  ? STYLES.mobileLinkActive",
      "                  : STYLES.mobileLink",
      "              }",
      "            >",
      "              {item.title}",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <nav className={STYLES.navbarColor}>",
      "      <div className=\"max-w-7xl mx-auto px-8\">",
      "        <div",
      "          className={`flex items-center justify-between ${STYLES.navbarHeight}`}",
      "        >",
      "          <div className=\"w-full justify-between flex items-center\">",
      "            <a className=\"flex-shrink-0\" href=\"/\">",
      "              <h1 className={STYLES.brand}>{BRAND}</h1>",
      "            </a>",
      "            <div className=\"hidden md:block\">",
      "              <div className=\"ml-10 flex items-baseline space-x-4\">",
      "                {MENU.map((item) => {",
      "                  if (item.submenu && item.submenu.length > 0) {",
      "                    return dropdown(item);",
      "                  }",
      "                  return (",
      "                    <a",
      "                      className={",
      "                        pathname.includes(item.link)",
      "                          ? STYLES.linkActive",
      "                          : STYLES.link",
      "                      }",
      "                      href={item.link}",
      "                      key={`menu: ${item.title}`}",
      "                    >",
      "                      {item.title}",
      "                    </a>",
      "                  );",
      "                })}",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"block\">",
      "            <div className=\"ml-4 flex items-center md:ml-6\"></div>",
      "          </div>",
      "          <div className=\"-mr-2 flex md:hidden\">",
      "            <button onClick={() => setOpen(!open)} className={STYLES.toggle}>",
      "              <svg",
      "                width=\"20\"",
      "                height=\"20\"",
      "                fill=\"currentColor\"",
      "                className=\"h-8 w-8\"",
      "                viewBox=\"0 0 1792 1792\"",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "              >",
      "                <path d=\"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"></path>",
      "              </svg>",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "      <div className={`${open ? \"\" : \"hidden\"} md:hidden`}>",
      "        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">",
      "          {MENU.map((item) => {",
      "            if (item.subment && item.submenu.length > 0) {",
      "              accordion(item);",
      "            }",
      "            return (",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link)",
      "                    ? STYLES.mobileLinkActive",
      "                    : STYLES.mobileLink",
      "                }",
      "                href={item.link}",
      "                key={`mobileMenu: ${item.title}`}",
      "              >",
      "                {item.title}",
      "              </a>",
      "            );",
      "          })}",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "}",
      ""
    ]
  },
  "Navbar V3 (Next.Js)": {
    "prefix": "ch-navbarV3Next",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design from https://www.tailwind-kit.com/components/header",
      "",
      "import Link from \"next/link\";",
      "import { useRouter } from \"next/router\";",
      "import { useEffect, useState, Fragment } from \"react\";",
      "",
      "export default function Navbar() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useRouter();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Styles",
      "  const STYLES = {",
      "    navbarColor: \"bg-white dark:bg-gray-800\",",
      "    navbarHeight: \" h-16\",",
      "    brand: \"text-gray-800 dark:text-white text-2xl font-bold\",",
      "    link: \"text-gray-300 hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    linkActive:",
      "      \"text-gray-800 dark:text-white  hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    mobileLink:",
      "      \"text-gray-300 hover:text-gray-800 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    mobileLinkActive:",
      "      \"text-gray-800 dark:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    toggle:",
      "      \"text-gray-800 dark:text-white hover:text-gray-300 inline-flex items-center justify-center p-2 rounded-md focus:outline-none\",",
      "  };",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    { title: \"Home\", link: \"/\", subMenu: [] },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  // Navbar State",
      "  const [open, setOpen] = useState(false);",
      "",
      "  // Dropdown",
      "  function dropdown(menuItem) {",
      "    const [openD, setOpenD] = useState(false);",
      "",
      "    const DROPDOWN_STYLES = {",
      "      button: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-sm\",",
      "        color:",
      "          \"bg-white dark:bg-gray-800 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "        base: \"flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "        text: \"text-sm font-medium\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "      },",
      "      menu: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-lg\",",
      "        color: \"bg-white dark:bg-gray-800 ring-black\",",
      "        text: \"\",",
      "        base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "      },",
      "      menuItem: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"\",",
      "        color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "        base: \"block items-center px-4 py-2\",",
      "      },",
      "    };",
      "    return (",
      "      <div key={menuItem.title} className=\"relative inline-block text-left\">",
      "        <div>",
      "          <button",
      "            onClick={() => setOpenD(!openD)}",
      "            onMouseOver={() => setOpenD(true)}",
      "            onMouseLeave={() => setOpenD(false)}",
      "            onBlur={() => setOpenD(false)}",
      "            type=\"button\"",
      "            className={`${DROPDOWN_STYLES.button.shadow} ${DROPDOWN_STYLES.button.shape} ${DROPDOWN_STYLES.button.color} ${DROPDOWN_STYLES.button.text} ${DROPDOWN_STYLES.button.textColor} ${DROPDOWN_STYLES.button.base}`}",
      "            id=\"options-menu\"",
      "          >",
      "            {menuItem.title}",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                openD ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </button>",
      "        </div>",
      "        <div",
      "          onMouseOver={() => setOpenD(true)}",
      "          onMouseLeave={() => setOpenD(false)}",
      "          className={`${",
      "            openD ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"",
      "          } ${DROPDOWN_STYLES.menu.shape} ${DROPDOWN_STYLES.menu.shadow} ${",
      "            DROPDOWN_STYLES.menu.color",
      "          } ${DROPDOWN_STYLES.menu.base}`}",
      "        >",
      "          <div",
      "            role=\"menu\"",
      "            aria-orientation=\"vertical\"",
      "            aria-labelledby=\"options-menu\"",
      "          >",
      "            {menuItem.subMenu.map((item) => (",
      "              <a",
      "                key={\"MenuItem:\" + item.title}",
      "                href={item.link}",
      "                className={`${DROPDOWN_STYLES.menuItem.color} ${",
      "                  DROPDOWN_STYLES.menuItem.shape",
      "                } ${DROPDOWN_STYLES.menuItem.base} ${",
      "                  pathname.includes(item.link)",
      "                    ? DROPDOWN_STYLES.menuItem.textColorActive",
      "                    : DROPDOWN_STYLES.menuItem.textColor",
      "                }`}",
      "                role=\"menuitem\"",
      "              >",
      "                <span className=\"flex flex-col\">",
      "                  <span>{item.title}</span>",
      "                </span>",
      "              </a>",
      "            ))}",
      "          </div>",
      "        </div>",
      "      </div>",
      "    );",
      "  }",
      "",
      "  // Accordion for mobile menu",
      "  function accordion(menuItem) {",
      "    const [openA, setOpenA] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`mobileMenu: ${menuItem.title}`}>",
      "        <a",
      "          onClick={() => setOpenA(!openA)}",
      "          className={`flex gap-2 items-center ${STYLES.mobileLink}`}",
      "        >",
      "          {menuItem.title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              openA ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            openA ? \" h-fit\" : \"scale-y-0 opacity-0 -translate-y-2 h-0\"",
      "          } px-4 origin-top transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <Link href={item.link} key={`mobileMenu: ${item.title}`}>",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link)",
      "                    ? STYLES.mobileLinkActive",
      "                    : STYLES.mobileLink",
      "                }",
      "              >",
      "                {item.title}",
      "              </a>",
      "            </Link>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <nav className={STYLES.navbarColor}>",
      "      <div className=\"max-w-7xl mx-auto px-8\">",
      "        <div",
      "          className={`flex items-center justify-between ${STYLES.navbarHeight}`}",
      "        >",
      "          <div className=\" flex items-center\">",
      "            <h1 className={STYLES.brand}>{BRAND}</h1>",
      "            <div className=\"hidden md:block\">",
      "              <div className=\"ml-10 flex items-baseline space-x-4\">",
      "                {MENU.map((item) => {",
      "                  if (item.subMenu && item.subMenu.length > 0) {",
      "                    return dropdown(item);",
      "                  }",
      "                  return (",
      "                    <Link key={`menu: ${item.title}`} href={item.link}>",
      "                      <a",
      "                        className={",
      "                          pathname.includes(item.link)",
      "                            ? STYLES.linkActive",
      "                            : STYLES.link",
      "                        }",
      "                      >",
      "                        {item.title}",
      "                      </a>",
      "                    </Link>",
      "                  );",
      "                })}",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"block\">",
      "            <div className=\"ml-4 flex items-center md:ml-6\">",
      "              <div className=\"ml-3 relative\">",
      "                <div className=\"relative inline-block text-left\">",
      "                  <div>",
      "                    <button",
      "                      type=\"button\"",
      "                      className=\"py-2 px-4  bg-blue-600 hover:bg-blue-700 focus:ring-vlue-500 focus:ring-offset-blue-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"",
      "                    >",
      "                      Button",
      "                    </button>",
      "                  </div>",
      "                </div>",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"-mr-2 flex md:hidden\">",
      "            <button onClick={() => setOpen(!open)} className={STYLES.toggle}>",
      "              <svg",
      "                width=\"20\"",
      "                height=\"20\"",
      "                fill=\"currentColor\"",
      "                className=\"h-8 w-8\"",
      "                viewBox=\"0 0 1792 1792\"",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "              >",
      "                <path d=\"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"></path>",
      "              </svg>",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "      <div className={`${open ? \"\" : \"hidden\"} md:hidden`}>",
      "        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">",
      "          {MENU.map((item) => {",
      "            if (item.subMenu && item.subMenu.length > 0) {",
      "              return accordion(item);",
      "            }",
      "            return (",
      "              <Link href={item.link} key={`mobileMenu: ${item.title}`}>",
      "                <a",
      "                  className={",
      "                    pathname.includes(item.link)",
      "                      ? STYLES.mobileLinkActive",
      "                      : STYLES.mobileLink",
      "                  }",
      "                >",
      "                  {item.title}",
      "                </a>",
      "              </Link>",
      "            );",
      "          })}",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "}",
      ""
    ]
  },
  "Navbar V3 (React)": {
    "prefix": "ch-navbarV3React",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "// Design from https://www.tailwind-kit.com/components/header",
      "",
      "import { useEffect, useState, Fragment } from \"react\";",
      "import { useLocation } from \"react-router-dom\";",
      "",
      "export default function Navbar() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useLocation();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Styles",
      "  const STYLES = {",
      "    navbarColor: \"bg-white dark:bg-gray-800\",",
      "    navbarHeight: \"h-16\",",
      "    brand: \"text-gray-800 dark:text-white text-2xl font-bold\",",
      "    link: \"text-gray-300 hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    linkActive:",
      "      \"text-gray-800 dark:text-white  hover:text-gray-800 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\",",
      "    mobileLink:",
      "      \"text-gray-300 hover:text-gray-800 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    mobileLinkActive:",
      "      \"text-gray-800 dark:text-white block px-3 py-2 rounded-md text-base font-medium\",",
      "    toggle:",
      "      \"text-gray-800 dark:text-white hover:text-gray-300 inline-flex items-center justify-center p-2 rounded-md focus:outline-none\",",
      "  };",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    { title: \"Home\", link: \"/\" },",
      "    { title: \"Gallery\", link: \"/gallery\" },",
      "    { title: \"Project\", link: \"/project\" },",
      "    { title: \"Contact\", link: \"/contact\" },",
      "  ];",
      "",
      "  // Navbar State",
      "  const [open, setOpen] = useState(false);",
      "",
      "  // Dropdown",
      "  function dropdown(menuItem) {",
      "    const [openD, setOpenD] = useState(false);",
      "",
      "    const DROPDOWN_STYLES = {",
      "      button: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-sm\",",
      "        color:",
      "          \"bg-white dark:bg-gray-800 focus:ring-offset-gray-100 focus:ring-gray-500\",",
      "        base: \"flex gap-4 items-center justify-center w-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-offset-2\",",
      "        text: \"text-sm font-medium\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "      },",
      "      menu: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"shadow-lg\",",
      "        color: \"bg-white dark:bg-gray-800 ring-black\",",
      "        text: \"\",",
      "        base: \"origin-top-right absolute right-0 mt-2 w-fit ring-1 ring-opacity-5 transition-all duration-300\",",
      "      },",
      "      menuItem: {",
      "        shape: \"rounded-md\",",
      "        shadow: \"\",",
      "        color: \"hover:bg-gray-100  dark:hover:bg-gray-600\",",
      "        textColor: \"text-gray-300 hover:text-gray-800 dark:hover:text-white\",",
      "        textColorActive:",
      "          \"text-gray-800 dark:text-white hover:text-gray-800 dark:hover:text-white\",",
      "        base: \"block items-center px-4 py-2\",",
      "      },",
      "    };",
      "    return (",
      "      <div key={menuItem.title} className=\"relative inline-block text-left\">",
      "        <div>",
      "          <button",
      "            onClick={() => setOpenD(!openD)}",
      "            onMouseOver={() => setOpenD(true)}",
      "            onMouseLeave={() => setOpenD(false)}",
      "            onBlur={() => setOpenD(false)}",
      "            type=\"button\"",
      "            className={`${DROPDOWN_STYLES.button.shadow} ${DROPDOWN_STYLES.button.shape} ${DROPDOWN_STYLES.button.color} ${DROPDOWN_STYLES.button.text} ${DROPDOWN_STYLES.button.textColor} ${DROPDOWN_STYLES.button.base}`}",
      "            id=\"options-menu\"",
      "          >",
      "            {menuItem.title}",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                openD ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </button>",
      "        </div>",
      "        <div",
      "          onMouseOver={() => setOpenD(true)}",
      "          onMouseLeave={() => setOpenD(false)}",
      "          className={`${",
      "            openD ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"",
      "          } ${DROPDOWN_STYLES.menu.shape} ${DROPDOWN_STYLES.menu.shadow} ${",
      "            DROPDOWN_STYLES.menu.color",
      "          } ${DROPDOWN_STYLES.menu.base}`}",
      "        >",
      "          <div",
      "            role=\"menu\"",
      "            aria-orientation=\"vertical\"",
      "            aria-labelledby=\"options-menu\"",
      "          >",
      "            {menuItem.subMenu.map((item) => (",
      "              <a",
      "                key={\"MenuItem:\" + item.title}",
      "                href={item.link}",
      "                className={`${DROPDOWN_STYLES.menuItem.color} ${",
      "                  DROPDOWN_STYLES.menuItem.shape",
      "                } ${DROPDOWN_STYLES.menuItem.base} ${",
      "                  pathname.includes(item.link)",
      "                    ? DROPDOWN_STYLES.menuItem.textColorActive",
      "                    : DROPDOWN_STYLES.menuItem.textColor",
      "                }`}",
      "                role=\"menuitem\"",
      "              >",
      "                <span className=\"flex flex-col\">",
      "                  <span>{item.title}</span>",
      "                </span>",
      "              </a>",
      "            ))}",
      "          </div>",
      "        </div>",
      "      </div>",
      "    );",
      "  }",
      "",
      "  // Accordion for mobile menu",
      "  function accordion(menuItem) {",
      "    const [openA, setOpenA] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`mobileMenu: ${menuItem.title}`}>",
      "        <a",
      "          onClick={() => setOpenA(!openA)}",
      "          className={`flex gap-2 items-center ${STYLES.mobileLink}`}",
      "        >",
      "          {menuItem.title}",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className={`h-5 w-5 transition-all duration-300 ${",
      "              openA ? \"rotate-180\" : \"\"",
      "            }`}",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            openA ? \" h-fit\" : \"scale-y-0 opacity-0 -translate-y-2 h-0\"",
      "          } px-4 origin-top transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <a",
      "              href={item.link}",
      "              key={`mobileMenu: ${item.title}`}",
      "              className={",
      "                pathname.includes(item.link)",
      "                  ? STYLES.mobileLinkActive",
      "                  : STYLES.mobileLink",
      "              }",
      "            >",
      "              {item.title}",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "  return (",
      "    <nav className={STYLES.navbarColor}>",
      "      <div className=\"max-w-7xl mx-auto px-8\">",
      "        <div",
      "          className={`flex items-center justify-between ${STYLES.navbarHeight}`}",
      "        >",
      "          <div className=\" flex items-center\">",
      "            <h1 className={STYLES.brand}>{BRAND}</h1>",
      "            <div className=\"hidden md:block\">",
      "              <div className=\"ml-10 flex items-baseline space-x-4\">",
      "                {MENU.map((item) => {",
      "                  if (item.submenu && item.submenu.length > 0) {",
      "                    return dropdown(item);",
      "                  }",
      "                  return (",
      "                    <a",
      "                      className={",
      "                        pathname.includes(item.link)",
      "                          ? STYLES.linkActive",
      "                          : STYLES.link",
      "                      }",
      "                      href={item.link}",
      "                      key={`menu: ${item.title}`}",
      "                    >",
      "                      {item.title}",
      "                    </a>",
      "                  );",
      "                })}",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"block\">",
      "            <div className=\"ml-4 flex items-center md:ml-6\">",
      "              <div className=\"ml-3 relative\">",
      "                <div className=\"relative inline-block text-left\">",
      "                  <div>",
      "                    <button",
      "                      type=\"button\"",
      "                      className=\"py-2 px-4  bg-blue-600 hover:bg-blue-700 focus:ring-vlue-500 focus:ring-offset-blue-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"",
      "                    >",
      "                      Button",
      "                    </button>",
      "                  </div>",
      "                </div>",
      "              </div>",
      "            </div>",
      "          </div>",
      "          <div className=\"-mr-2 flex md:hidden\">",
      "            <button onClick={() => setOpen(!open)} className={STYLES.toggle}>",
      "              <svg",
      "                width=\"20\"",
      "                height=\"20\"",
      "                fill=\"currentColor\"",
      "                className=\"h-8 w-8\"",
      "                viewBox=\"0 0 1792 1792\"",
      "                xmlns=\"http://www.w3.org/2000/svg\"",
      "              >",
      "                <path d=\"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"></path>",
      "              </svg>",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "      <div className={`${open ? \"\" : \"hidden\"} md:hidden`}>",
      "        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">",
      "          {MENU.map((item) => {",
      "            if (item.subment && item.submenu.length > 0) {",
      "              accordion(item);",
      "            }",
      "            return (",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link)",
      "                    ? STYLES.mobileLinkActive",
      "                    : STYLES.mobileLink",
      "                }",
      "                href={item.link}",
      "                key={`mobileMenu: ${item.title}`}",
      "              >",
      "                {item.title}",
      "              </a>",
      "            );",
      "          })}",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "}",
      ""
    ]
  },
  "Progress": {
    "prefix": "ch-progress",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Progress progress={10} showPercent />",
      " */",
      "",
      "export default function Progress({ progress, showPercent, title }) {",
      "  return (",
      "    <div className=\"w-full\">",
      "      {title || showPercent ? (",
      "        <div className=\"pb-4\">",
      "          {title ? (",
      "            <span className=\"bg-green-500 text-white rounded px-2 py-2 font-medium\">",
      "              {title}",
      "            </span>",
      "          ) : null}",
      "          {showPercent ? (",
      "            <span className=\"float-right bg-green-500 text-white rounded px-2 py-1 font-medium\">",
      "              {progress} %",
      "            </span>",
      "          ) : null}{\" \"}",
      "        </div>",
      "      ) : null}",
      "",
      "      <div className=\"w-full h-2 bg-gray-400 rounded-full\">",
      "        <div",
      "          style={{ width: `${progress ? progress : 0}%` }}",
      "          className=\"h-full bg-green-500 rounded-full\"",
      "        />",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Progress TS": {
    "prefix": "ch-progressTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <ProgressTS progress={10} showPercent />",
      " */",
      "",
      "export default function ProgressTS({",
      "  progress,",
      "  showPercent,",
      "  title,",
      "}: {",
      "  progress: number;",
      "  showPercent?: boolean;",
      "  title?: string;",
      "}) {",
      "  return (",
      "    <div className=\"w-full\">",
      "      {title || showPercent ? (",
      "        <div className=\"flex justify-between pb-4\">",
      "          {title ? (",
      "            <span className=\"rounded bg-green-500 px-1 font-medium text-white\">",
      "              {title}",
      "            </span>",
      "          ) : (",
      "            <div></div>",
      "          )}",
      "          {showPercent ? (",
      "            <span className=\"float-right rounded bg-green-500 px-1 font-medium text-white\">",
      "              {progress} %",
      "            </span>",
      "          ) : null}",
      "        </div>",
      "      ) : null}",
      "",
      "      <div className=\"h-2 w-full rounded-full bg-gray-400\">",
      "        <div",
      "          style={{ width: `${progress || 0}%` }}",
      "          className=\"h-full rounded-full bg-green-500\"",
      "        />",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Sidenav V1 (Next.Js)": {
    "prefix": "ch-sidenavV1Next",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import Link from \"next/link\";",
      "import { useRouter } from \"next/router\";",
      "import { Fragment, useEffect, useState } from \"react\";",
      "",
      "export default function Sidenav() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useRouter();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    {",
      "      title: \"Home\",",
      "      link: \"/\",",
      "      icon: (",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          fill=\"none\"",
      "          viewBox=\"0 0 24 24\"",
      "          strokeWidth=\"1.5\"",
      "          stroke=\"currentColor\"",
      "          className=\"h-6 w-6\"",
      "        >",
      "          <path",
      "            strokeLinecap=\"round\"",
      "            strokeLinejoin=\"round\"",
      "            d=\"M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"",
      "          />",
      "        </svg>",
      "      ),",
      "      subMenu: [],",
      "    },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  const STYLES = {",
      "    brand:",
      "      \"text-gray-800 dark:text-white text-4xl font-bold flex justify-center py-4\",",
      "    background: \"bg-white dark:bg-gray-800\",",
      "    width: \"w-72\",",
      "    height: \"h-screen\",",
      "    item: \"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 mb-2 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-600 dark:text-gray-400 rounded-lg\",",
      "    itemActive:",
      "      \"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 mb-2 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-800 dark:text-gray-100 rounded-lg bg-gray-100 dark:bg-gray-600\",",
      "  };",
      "",
      "  function accordion(menuItem) {",
      "    const [open, setOpen] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`Sidebar: ${menuItem.title}`}>",
      "        <a onClick={() => setOpen(!open)} className={STYLES.item}>",
      "          <div className=\"flex justify-between w-full items-center\">",
      "            <span className=\"mx-4 flex items-center gap-2 text-lg font-normal\">",
      "              {menuItem.icon ?? null}",
      "              {menuItem.title}",
      "            </span>",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                open ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </div>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            open ? \" h-fit\" : \"h-0 -translate-y-2 scale-y-0 opacity-0\"",
      "          } origin-top px-4 transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <Link key={`Sidebar: ${item.title}`} href={item.link}>",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link) ? STYLES.itemActive : STYLES.item",
      "                }",
      "              >",
      "                <span className=\"mx-4 flex items-center gap-2 text-lg font-normal\">",
      "                  {item.icon ?? null}",
      "                  {item.title}",
      "                </span>",
      "              </a>",
      "            </Link>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <div",
      "      className={`relative flex flex-col sm:flex-row sm:justify-around ${STYLES.background} ${STYLES.width} ${STYLES.height}`}",
      "    >",
      "      <nav className=\"w-full px-2\">",
      "        {BRAND !== \"\" ? <h1 className={STYLES.brand}>{BRAND}</h1> : null}",
      "        {MENU.map((item) => {",
      "          if (item.subMenu && item.subMenu.length > 0) {",
      "            return accordion(item);",
      "          }",
      "          return (",
      "            <Link key={`Sidebar: ${item.title}`} href={item.link}>",
      "              <a",
      "                className={",
      "                  pathname.includes(item.link) ? STYLES.itemActive : STYLES.item",
      "                }",
      "              >",
      "                <span className=\"mx-4 flex items-center gap-2 text-lg font-normal\">",
      "                  {item.icon ?? null}",
      "                  {item.title}",
      "                </span>",
      "              </a>",
      "            </Link>",
      "          );",
      "        })}",
      "      </nav>",
      "      <div className=\"absolute inset-x-0 bottom-4\">{/* Footer Items */}</div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Sidenav V1 (React)": {
    "prefix": "ch-sidenavV1React",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import { Fragment, useEffect, useState } from \"react\";",
      "import { useLocation } from \"react-router-dom\";",
      "",
      "export default function Sidenav() {",
      "  // Get current location",
      "  const [pathname, setPathname] = useState(\"/\");",
      "  const router = useLocation();",
      "  useEffect(() => {",
      "    setPathname(router.pathname);",
      "  }, []);",
      "",
      "  // Navbar Variables",
      "  const BRAND = \"BRAND\";",
      "  const MENU = [",
      "    {",
      "      title: \"Home\",",
      "      link: \"/\",",
      "      icon: (",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          fill=\"none\"",
      "          viewBox=\"0 0 24 24\"",
      "          strokeWidth=\"1.5\"",
      "          stroke=\"currentColor\"",
      "          className=\"h-6 w-6\"",
      "        >",
      "          <path",
      "            strokeLinecap=\"round\"",
      "            strokeLinejoin=\"round\"",
      "            d=\"M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"",
      "          />",
      "        </svg>",
      "      ),",
      "      subMenu: [],",
      "    },",
      "    {",
      "      title: \"Gallery\",",
      "      link: \"\",",
      "      subMenu: [",
      "        { title: \"Overview\", link: \"/gallery\" },",
      "        { title: \"Top Picks\", link: \"/gallery/top_picks\" },",
      "      ],",
      "    },",
      "    { title: \"Project\", link: \"/project\", subMenu: [] },",
      "    { title: \"Contact\", link: \"/contact\", subMenu: [] },",
      "  ];",
      "",
      "  const STYLES = {",
      "    brand:",
      "      \"text-gray-800 dark:text-white text-4xl font-bold flex justify-center py-4\",",
      "    background: \"bg-white dark:bg-gray-800\",",
      "    width: \"w-72\",",
      "    height: \"h-screen\",",
      "    item: \"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 mb-2 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-600 dark:text-gray-400 rounded-lg\",",
      "    itemActive:",
      "      \"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 mb-2 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-800 dark:text-gray-100 rounded-lg bg-gray-100 dark:bg-gray-600\",",
      "  };",
      "",
      "  function accordion(menuItem) {",
      "    const [open, setOpen] = useState(false);",
      "",
      "    return (",
      "      <Fragment key={`Sidebar: ${menuItem.title}`}>",
      "        <a onClick={() => setOpen(!open)} className={STYLES.item}>",
      "          <div className=\"flex justify-between w-full items-center\">",
      "            <span className=\"mx-4 flex items-center gap-2 text-lg font-normal\">",
      "              {menuItem.icon ?? null}",
      "              {menuItem.title}",
      "            </span>",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className={`h-5 w-5 transition-all duration-300 ${",
      "                open ? \"rotate-180\" : \"\"",
      "              }`}",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </div>",
      "        </a>",
      "        <div",
      "          className={`${",
      "            open ? \" h-fit\" : \"h-0 -translate-y-2 scale-y-0 opacity-0\"",
      "          } origin-top px-4 transition duration-300 ease-out`}",
      "        >",
      "          {menuItem.subMenu.map((item) => (",
      "            <a",
      "              key={`Sidebar: ${item.title}`}",
      "              href={item.link}",
      "              className={",
      "                pathname.includes(item.link) ? STYLES.itemActive : STYLES.item",
      "              }",
      "            >",
      "              <span className=\"mx-4 flex items-center gap-2 text-lg font-normal\">",
      "                {item.icon ?? null}",
      "                {item.title}",
      "              </span>",
      "            </a>",
      "          ))}",
      "        </div>",
      "      </Fragment>",
      "    );",
      "  }",
      "",
      "  return (",
      "    <div",
      "      className={`relative flex flex-col sm:flex-row sm:justify-around ${STYLES.background} ${STYLES.width} ${STYLES.height}`}",
      "    >",
      "      <nav className=\"w-full px-2\">",
      "        {BRAND !== \"\" ? <h1 className={STYLES.brand}>{BRAND}</h1> : null}",
      "        {MENU.map((item) => {",
      "          if (item.subMenu && item.subMenu.length > 0) {",
      "            return accordion(item);",
      "          }",
      "          return (",
      "            <a",
      "              key={`Sidebar: ${item.title}`}",
      "              href={item.link}",
      "              className={",
      "                pathname.includes(item.link) ? STYLES.itemActive : STYLES.item",
      "              }",
      "            >",
      "              <span className=\"mx-4 flex items-center gap-2 text-lg font-normal\">",
      "                {item.icon ?? null}",
      "                {item.title}",
      "              </span>",
      "            </a>",
      "          );",
      "        })}",
      "      </nav>",
      "      <div className=\"absolute inset-x-0 bottom-4\">{/* Footer Items */}</div>",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Spinner": {
    "prefix": "ch-spinner",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React, { Fragment } from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <Spinner dashed />",
      " */",
      "",
      "export default function Spinner({ closed, dashed }) {",
      "  return (",
      "    <div className=\"flex\">",
      "      <div",
      "        className={`relative z-20 animate-spin  rounded-full h-32 w-32 border-t-2 border-l-2 border-green-500 ${",
      "          dashed ? \"border-dashed\" : \"\"",
      "        }`}",
      "      />",
      "      {closed ? (",
      "        <div className=\"absolute rounded-full h-32 w-32 border-2 border-gray-300 z-10\" />",
      "      ) : null}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Spinner TS": {
    "prefix": "ch-spinnerTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/**",
      " * Example:",
      " * <SpinnerTS dashed />",
      " */",
      "",
      "export default function SpinnerTS({",
      "  closed,",
      "  dashed,",
      "}: {",
      "  closed?: boolean;",
      "  dashed?: boolean;",
      "}) {",
      "  return (",
      "    <div className=\"flex\">",
      "      <div",
      "        className={`relative z-20 h-16 w-16 animate-spin rounded-full border-t-2 border-l-2 border-green-500 ${",
      "          dashed ? \"border-dashed\" : \"\"",
      "        }`}",
      "      />",
      "      {closed ? (",
      "        <div className=\"absolute z-10 h-16 w-16 rounded-full border-2 border-gray-300\" />",
      "      ) : null}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Steps X (Horizontal)": {
    "prefix": "ch-stepsX",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/** Example data:",
      "   const STEPS = [",
      "    { title: \"Start\", completed: true },",
      "    { title: \"In Progress\", completed: false },",
      "    { title: \"Testing\", completed: false },",
      "    { title: \"Completed\", completed: false },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <StepsX",
      "  steps={[",
      "    { title: \"Start\", completed: true },",
      "    { title: \"Middle\", completed: false },",
      "    { title: \"End\", completed: false },",
      "  ]}",
      "/>",
      "*/",
      "",
      "export default function StepsX({ steps }) {",
      "  return (",
      "    <div className=\"relative flex justify-between w-full\">",
      "      <div className=\"absolute inset-x-2 top-5 z-10 h-2 bg-gray-300\">",
      "        <div",
      "          style={{",
      "            width: `${",
      "              (steps.filter((step) => step.completed === true).length * 100) /",
      "              (steps.length - 1)",
      "            }%`,",
      "          }}",
      "          className=\"absolute h-2 bg-green-500 z-20\"",
      "        ></div>",
      "      </div>",
      "      {steps.map((step, index) => {",
      "        if (index === 0) {",
      "          return (",
      "            <div",
      "              key={`Step: ${step.title}`}",
      "              className=\"z-30 flex flex-col items-center\"",
      "            >",
      "              <div",
      "                className={`w-10 h-10 p-4 flex justify-center items-center text-center rounded-full font-medium ${",
      "                  step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "                }`}",
      "              >",
      "                {index}",
      "              </div>",
      "              {step.title}",
      "            </div>",
      "          );",
      "        }",
      "        if (steps.length - 1 === index) {",
      "          return (",
      "            <div",
      "              key={`Step: ${step.title}`}",
      "              className=\"z-20 flex flex-col items-end \"",
      "            >",
      "              <div",
      "                className={`w-10 h-10 p-4 flex justify-center items-center text-center rounded-full font-medium ${",
      "                  step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "                }`}",
      "              >",
      "                {index}",
      "              </div>",
      "              {step.title}",
      "            </div>",
      "          );",
      "        }",
      "",
      "        return (",
      "          <div",
      "            key={`Step: ${step.title}`}",
      "            className=\"z-20 flex flex-col items-center \"",
      "          >",
      "            <div",
      "              className={`w-10 h-10 p-4 flex justify-center items-center text-center rounded-full font-medium ${",
      "                step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "              }`}",
      "            >",
      "              {index}",
      "            </div>",
      "            {step.title}",
      "          </div>",
      "        );",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Steps X (Horizontal) TS": {
    "prefix": "ch-stepsXTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/** Example data:",
      "   const STEPS = [",
      "    { title: \"Start\", completed: true },",
      "    { title: \"In Progress\", completed: false },",
      "    { title: \"Testing\", completed: false },",
      "    { title: \"Completed\", completed: false },",
      "  ];",
      "*/",
      "",
      "/**",
      " * Example:",
      " * <StepXTS",
      "    steps={[",
      "      { title: \"Start\", completed: true },",
      "      { title: \"Middle\", completed: false },",
      "      { title: \"End\", completed: false },",
      "    ]}",
      "  />",
      " */",
      "",
      "export type StepData = {",
      "  title: string;",
      "  completed: boolean;",
      "};",
      "",
      "export default function StepsX({ steps }: { steps: StepData[] }) {",
      "  return (",
      "    <div className=\"relative flex w-full justify-between\">",
      "      <div className=\"absolute inset-x-2 top-5 z-10 h-2 bg-gray-300\">",
      "        <div",
      "          style={{",
      "            width: `${",
      "              (steps.filter((step) => step.completed === true).length * 100) /",
      "              (steps.length - 1)",
      "            }%`,",
      "          }}",
      "          className=\"absolute z-20 h-2 bg-green-500\"",
      "        ></div>",
      "      </div>",
      "      {steps.map((step, index) => {",
      "        if (index === 0) {",
      "          return (",
      "            <div",
      "              key={`Step: ${step.title}`}",
      "              className=\"z-30 flex flex-col items-center\"",
      "            >",
      "              <div",
      "                className={`flex h-10 w-10 items-center justify-center rounded-full p-4 text-center font-medium ${",
      "                  step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "                }`}",
      "              >",
      "                {index}",
      "              </div>",
      "              {step.title}",
      "            </div>",
      "          );",
      "        }",
      "        if (steps.length - 1 === index) {",
      "          return (",
      "            <div",
      "              key={`Step: ${step.title}`}",
      "              className=\"z-20 flex flex-col items-end \"",
      "            >",
      "              <div",
      "                className={`flex h-10 w-10 items-center justify-center rounded-full p-4 text-center font-medium ${",
      "                  step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "                }`}",
      "              >",
      "                {index}",
      "              </div>",
      "              {step.title}",
      "            </div>",
      "          );",
      "        }",
      "",
      "        return (",
      "          <div",
      "            key={`Step: ${step.title}`}",
      "            className=\"z-20 flex flex-col items-center \"",
      "          >",
      "            <div",
      "              className={`flex h-10 w-10 items-center justify-center rounded-full p-4 text-center font-medium ${",
      "                step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "              }`}",
      "            >",
      "              {index}",
      "            </div>",
      "            {step.title}",
      "          </div>",
      "        );",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Steps Y (Vertical)": {
    "prefix": "ch-stepsY",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/** Example data:",
      "   const STEPS = [",
      "    { title: \"Start\", completed: true },",
      "    { title: \"In Progress\", completed: false },",
      "    { title: \"Testing\", completed: false },",
      "    { title: \"Completed\", completed: false },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <StepsY",
      "    steps={[",
      "      { title: \"Start\", completed: true },",
      "      { title: \"Middle\", completed: false },",
      "      { title: \"End\", completed: false },",
      "    ]}",
      "  />",
      " */",
      "",
      "export default function StepsY({ steps }) {",
      "  return (",
      "    <div className=\"relative flex flex-col justify-between w-fit h-full py-2\">",
      "      <div className=\"absolute left-4 top-8 w-2 h-[calc(100%-4rem)] bg-gray-300 z-10\">",
      "        <div",
      "          style={{",
      "            height: `${",
      "              (steps.filter((step) => step.completed === true).length * 100) /",
      "              (steps.length - 1)",
      "            }%`,",
      "          }}",
      "          className=\"absolute w-2 bg-green-500 z-20\"",
      "        ></div>",
      "      </div>",
      "      {steps.map((step, index) => (",
      "        <div",
      "          key={`Step: ${step.title}`}",
      "          className=\"z-20 flex flex-row items-center gap-2\"",
      "        >",
      "          <div",
      "            className={`w-10 h-10 p-4 flex justify-center items-center text-center rounded-full font-medium ${",
      "              step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "            }`}",
      "          >",
      "            {index}",
      "          </div>",
      "          {step.title}",
      "        </div>",
      "      ))}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Steps Y (Vertical) TS": {
    "prefix": "ch-stepsYTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/** Example data:",
      "   const STEPS = [",
      "    { title: \"Start\", completed: true },",
      "    { title: \"In Progress\", completed: false },",
      "    { title: \"Testing\", completed: false },",
      "    { title: \"Completed\", completed: false },",
      "  ];",
      " */",
      "",
      "/**",
      " * Example:",
      " * <StepsYTS",
      "    steps={[",
      "      { title: \"Start\", completed: true },",
      "      { title: \"Middle\", completed: false },",
      "      { title: \"End\", completed: false },",
      "    ]}",
      "  />",
      " */",
      "",
      "export type StepData = {",
      "  title: string;",
      "  completed: boolean;",
      "};",
      "",
      "export default function StepsY({ steps }: { steps: StepData[] }) {",
      "  return (",
      "    <div className=\"relative flex h-full w-fit flex-col justify-between py-2\">",
      "      <div className=\"absolute left-4 top-8 z-10 h-[calc(100%-4rem)] w-2 bg-gray-300\">",
      "        <div",
      "          style={{",
      "            height: `${",
      "              (steps.filter((step) => step.completed === true).length * 100) /",
      "              (steps.length - 1)",
      "            }%`,",
      "          }}",
      "          className=\"absolute z-20 w-2 bg-green-500\"",
      "        ></div>",
      "      </div>",
      "      {steps.map((step, index) => (",
      "        <div",
      "          key={`Step: ${step.title}`}",
      "          className=\"z-20 flex flex-row items-center gap-2\"",
      "        >",
      "          <div",
      "            className={`flex h-10 w-10 items-center justify-center rounded-full p-4 text-center font-medium ${",
      "              step.completed ? \"bg-green-500 text-white\" : \"bg-gray-300\"",
      "            }`}",
      "          >",
      "            {index}",
      "          </div>",
      "          {step.title}",
      "        </div>",
      "      ))}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Tabs": {
    "prefix": "ch-tabs",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "/**",
      " * Example:",
      " *  <Tabs",
      "      stretched",
      "      data={[",
      "        { title: \"Tab1\", content: \"Tab1 content\" },",
      "        { title: \"Tab2\", content: \"Tab2 content\" },",
      "      ]}",
      "    />",
      " */",
      "",
      "export default function Tabs({ data, stretched }) {",
      "  const [selected, setSelected] = useState(0);",
      "  return (",
      "    <div className=\"flex flex-col h-full w-full\">",
      "      <div className=\"flex flex-row justify-start\">",
      "        {data.map((item, index) => {",
      "          if (index === selected) {",
      "            return (",
      "              <button",
      "                key={`Tab Button: ${index}`}",
      "                onClick={() => setSelected(index)}",
      "                className={`border-b-2 border-black text-black ${",
      "                  stretched ? \"w-full\" : \"px-2\"",
      "                }`}",
      "              >",
      "                {item.title}",
      "              </button>",
      "            );",
      "          }",
      "          return (",
      "            <button",
      "              key={`Tab Button: ${index}`}",
      "              onClick={() => setSelected(index)}",
      "              className={`border-b-2 border-gray-300 text-gray-300 hover:text-black active:scale-90  ${",
      "                stretched ? \"w-full\" : \"px-2\"",
      "              }`}",
      "            >",
      "              {item.title}",
      "            </button>",
      "          );",
      "        })}",
      "      </div>",
      "      {data.map((item, index) => {",
      "        if (index === selected) {",
      "          return item.content;",
      "        }",
      "        return null;",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Tabs TS": {
    "prefix": "ch-tabsTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { ReactNode, useState } from \"react\";",
      "",
      "/**",
      " * Example:",
      " *  <TabsTS",
      "      stretched",
      "      data={[",
      "        { title: \"Tab1\", content: \"Tab1 content\" },",
      "        { title: \"Tab2\", content: \"Tab2 content\" },",
      "      ]}",
      "    />",
      " */",
      "",
      "export type TabData = {",
      "  title: string;",
      "  content: ReactNode;",
      "};",
      "",
      "export default function TabsTS({",
      "  data,",
      "  stretched,",
      "}: {",
      "  data: TabData[];",
      "  stretched?: boolean;",
      "}) {",
      "  const [selected, setSelected] = useState(0);",
      "  return (",
      "    <div className=\"flex h-full w-full flex-col\">",
      "      <div className=\"flex flex-row justify-start\">",
      "        {data.map((item, index) => {",
      "          if (index === selected) {",
      "            return (",
      "              <button",
      "                key={`Tab Button: ${index}`}",
      "                onClick={() => setSelected(index)}",
      "                className={`border-b-2 border-black text-black ${",
      "                  stretched ? \"w-full\" : \"px-2\"",
      "                }`}",
      "              >",
      "                {item.title}",
      "              </button>",
      "            );",
      "          }",
      "          return (",
      "            <button",
      "              key={`Tab Button: ${index}`}",
      "              onClick={() => setSelected(index)}",
      "              className={`border-b-2 border-gray-300 text-gray-300 hover:text-black active:scale-90  ${",
      "                stretched ? \"w-full\" : \"px-2\"",
      "              }`}",
      "            >",
      "              {item.title}",
      "            </button>",
      "          );",
      "        })}",
      "      </div>",
      "      {data.map((item, index) => {",
      "        if (index === selected) {",
      "          return item.content;",
      "        }",
      "        return null;",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Tabs Vertical": {
    "prefix": "ch-tabsVertical",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "/**",
      " * Example:",
      " *  <TabsVertical",
      "      stretched",
      "      data={[",
      "        { title: \"Tab1\", content: \"Tab1 content\" },",
      "        { title: \"Tab2\", content: \"Tab2 content\" },",
      "      ]}",
      "    />",
      " */",
      "",
      "export default function TabsVertical({ data, stretched }) {",
      "  const [selected, setSelected] = useState(0);",
      "",
      "  return (",
      "    <div className=\"flex h-full w-full\">",
      "      <div className=\"flex flex-col justify-start\">",
      "        {data.map((item, index) => {",
      "          if (index === selected) {",
      "            return (",
      "              <button",
      "                key={`Tab Button: ${index}`}",
      "                onClick={() => setSelected(index)}",
      "                className={`border-r-2 border-black text-black px-4 ${",
      "                  stretched ? \"h-full\" : \"py-2\"",
      "                }`}",
      "              >",
      "                {item.title}",
      "              </button>",
      "            );",
      "          }",
      "          return (",
      "            <button",
      "              key={`Tab Button: ${index}`}",
      "              onClick={() => setSelected(index)}",
      "              className={`border-r-2 border-gray-300 text-gray-300 hover:text-black active:scale-90 px-4 ${",
      "                stretched ? \"h-full\" : \"py-2\"",
      "              }`}",
      "            >",
      "              {item.title}",
      "            </button>",
      "          );",
      "        })}",
      "      </div>",
      "      {data.map((item, index) => {",
      "        if (index === selected) {",
      "          return item.content;",
      "        }",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Tabs Vertical TS": {
    "prefix": "ch-tabsVerticalTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { ReactNode, useState } from \"react\";",
      "",
      "/**",
      " * Example:",
      " *  <TabsVerticalTS",
      "      stretched",
      "      data={[",
      "        { title: \"Tab1\", content: \"Tab1 content\" },",
      "        { title: \"Tab2\", content: \"Tab2 content\" },",
      "      ]}",
      "    />",
      " */",
      "",
      "export type TabData = {",
      "  title: string;",
      "  content: ReactNode;",
      "};",
      "",
      "export default function TabsVertical({",
      "  data,",
      "  stretched,",
      "}: {",
      "  data: TabData[];",
      "  stretched?: boolean;",
      "}) {",
      "  const [selected, setSelected] = useState(0);",
      "",
      "  return (",
      "    <div className=\"flex h-full w-full\">",
      "      <div className=\"flex flex-col justify-start\">",
      "        {data.map((item, index) => {",
      "          if (index === selected) {",
      "            return (",
      "              <button",
      "                key={`Tab Button: ${index}`}",
      "                onClick={() => setSelected(index)}",
      "                className={`border-r-2 border-black px-4 text-black ${",
      "                  stretched ? \"h-full\" : \"py-2\"",
      "                }`}",
      "              >",
      "                {item.title}",
      "              </button>",
      "            );",
      "          }",
      "          return (",
      "            <button",
      "              key={`Tab Button: ${index}`}",
      "              onClick={() => setSelected(index)}",
      "              className={`border-r-2 border-gray-300 px-4 text-gray-300 hover:text-black active:scale-90 ${",
      "                stretched ? \"h-full\" : \"py-2\"",
      "              }`}",
      "            >",
      "              {item.title}",
      "            </button>",
      "          );",
      "        })}",
      "      </div>",
      "      {data.map((item, index) => {",
      "        if (index === selected) {",
      "          return item.content;",
      "        }",
      "        return null;",
      "      })}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Tooltip": {
    "prefix": "ch-tooltip",
    "description": "",
    "scope": "typescript,typescriptreact,javascript,javascriptreact",
    "body": [
      "import React from \"react\";",
      "",
      "/** EXAMPLE:",
      "   <div className=\"group relative inline-block bg-red-500 text-white p-2 rounded\">",
      "      Hover",
      "      <Tooltip>",
      "        Yay you hovered over me.",
      "      </Tooltip>",
      "    </div>",
      " */",
      "",
      "export default function Tooltip({ children, position }) {",
      "  const POSITION = {",
      "    top: \"left-1/2 -top-3 -translate-x-1/2 -translate-y-full  bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "    right:",
      "      \"top-1/2 -right-3 -translate-y-1/2 translate-x-full bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "    bottom:",
      "      \"left-1/2 -bottom-3 -translate-x-1/2 translate-y-full  bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "    left: \"top-1/2 -left-3 -translate-y-1/2 -translate-x-full bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "  };",
      "  const ARROW = {",
      "    top: \"after:content-[''] after:absolute after:left-1/2 after:top-[100%] after:-translate-x-1/2 after:border-8 after:border-x-transparent after:border-b-transparent after:border-t-blue-700\",",
      "    right:",
      "      \"before:content-[''] before:absolute before:top-1/2 before:right-[100%] before:-translate-y-1/2 before:border-8 before:border-y-transparent before:border-l-transparent before:border-r-blue-700\",",
      "    bottom:",
      "      \"after:content-[''] after:absolute after:left-1/2 after:bottom-[100%] after:-translate-x-1/2 after:border-8 after:border-x-transparent after:border-t-transparent after:border-b-blue-700\",",
      "    left: \"before:content-[''] before:absolute before:top-1/2 before:left-[100%] before:-translate-y-1/2 before:border-8 before:border-y-transparent before:border-r-transparent before:border-l-blue-700\",",
      "  };",
      "  return (",
      "    <div",
      "      className={`absolute min-w-[8rem] hidden px-2 py-1 group-hover:flex ${",
      "        POSITION[position || \"top\"]",
      "      } ${ARROW[position || \"top\"]}`}",
      "    >",
      "      {children}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  },
  "Tooltip TS": {
    "prefix": "ch-tooltipTS",
    "description": "",
    "scope": "typescript,typescriptreact",
    "body": [
      "import React, { ReactNode } from \"react\";",
      "",
      "/** EXAMPLE:",
      "   <div className=\"group relative inline-block bg-red-500 text-white p-2 rounded\">",
      "      Hover",
      "      <Tooltip>",
      "        Yay you hovered over me.",
      "      </Tooltip>",
      "    </div>",
      " */",
      "",
      "export default function TooltipTS({",
      "  children,",
      "  position,",
      "}: {",
      "  children: ReactNode;",
      "  position?: \"left\" | \"right\" | \"bottom\" | \"top\";",
      "}) {",
      "  const POSITION = {",
      "    top: \"left-1/2 -top-3 -translate-x-1/2 -translate-y-full  bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "    right:",
      "      \"top-1/2 -right-3 -translate-y-1/2 translate-x-full bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "    bottom:",
      "      \"left-1/2 -bottom-3 -translate-x-1/2 translate-y-full  bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "    left: \"top-1/2 -left-3 -translate-y-1/2 -translate-x-full bg-blue-700 rounded-lg text-center text-white text-sm\",",
      "  };",
      "  const ARROW = {",
      "    top: \"after:content-[''] after:absolute after:left-1/2 after:top-[100%] after:-translate-x-1/2 after:border-8 after:border-x-transparent after:border-b-transparent after:border-t-blue-700\",",
      "    right:",
      "      \"before:content-[''] before:absolute before:top-1/2 before:right-[100%] before:-translate-y-1/2 before:border-8 before:border-y-transparent before:border-l-transparent before:border-r-blue-700\",",
      "    bottom:",
      "      \"after:content-[''] after:absolute after:left-1/2 after:bottom-[100%] after:-translate-x-1/2 after:border-8 after:border-x-transparent after:border-t-transparent after:border-b-blue-700\",",
      "    left: \"before:content-[''] before:absolute before:top-1/2 before:left-[100%] before:-translate-y-1/2 before:border-8 before:border-y-transparent before:border-r-transparent before:border-l-blue-700\",",
      "  };",
      "  return (",
      "    <div",
      "      className={`absolute hidden min-w-[8rem] px-2 py-1 group-hover:flex ${",
      "        POSITION[position || \"top\"]",
      "      } ${ARROW[position || \"top\"]}`}",
      "    >",
      "      {children}",
      "    </div>",
      "  );",
      "}",
      ""
    ]
  }
}